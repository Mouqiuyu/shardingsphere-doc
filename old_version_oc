commit 229cc1c929655f35f663967faab73a491ddb7a4a
Author: liyao <maxwell92@126.com>
Date:   Tue Jun 6 19:39:24 2023 +0800

    docs: update features (#396)

diff --git a/docs/content/features/DBRE/_index.cn.md b/docs/content/features/DBRE/_index.cn.md
new file mode 100644
index 0000000..25e061d
--- /dev/null
+++ b/docs/content/features/DBRE/_index.cn.md
@@ -0,0 +1,6 @@
++++
+pre = "<b>3.2 </b>"
+title = "ShardingSphere Chaos 介绍"
+weight = 2
+chapter = true
++++
diff --git a/docs/content/features/EcosystemExtensions/_index.cn.md b/docs/content/features/EcosystemExtensions/_index.cn.md
new file mode 100644
index 0000000..59d7bc4
--- /dev/null
+++ b/docs/content/features/EcosystemExtensions/_index.cn.md
@@ -0,0 +1,7 @@
++++
+pre = "<b>3.4 </b>"
+title = "生态扩展"
+weight = 4
+chapter = true
++++
+
diff --git a/docs/content/features/QuickDeployment/_index.cn.md b/docs/content/features/QuickDeployment/_index.cn.md
new file mode 100644
index 0000000..15e76c0
--- /dev/null
+++ b/docs/content/features/QuickDeployment/_index.cn.md
@@ -0,0 +1,21 @@
++++
+pre = "<b>3.1 </b>"
+title = "云上一键部署"
+weight = 1
+chapter = true
++++
+
+## 概述
+
+云计算，从 IaaS 到 PaaS 再到 SaaS 的转换，不仅是基础设施构成的变化，也是软件开发理念的升级。随着 Kubernetes 掀起的云原生浪潮，越来越多的应用开始采用云原生技术栈进行部署。对于 ShardingSphere 来说亦如此。想要在云环境下使用和体验 ShardingSphere，首先需要解决的是部署的问题。
+
+## AWS 一键部署
+
+在 AWS 上进行部署，首先需要了解 AWS 的各类资源和服务，比如 VPC、子网、安全组、弹性负载均衡器、域名、EC2、RDS、CloudWatch 等服务。为了快速描述清楚一套完整的 ShardingSphere 部署结构，可以采用基础设施即代码的方式进行描述，比如 AWS 官方推出的 CloudFormation 服务。该服务通过 json 或 yaml
+模板的形式，对抽象的部署所需要的各类资源进行定义和组合，并由相关服务进行解释和执行。用户只需要编写相关描述文件，并且可以利用 Git 等版本控制工具将部署的代码进行管理和维护。
+
+目前 Apache ShardingSphere 的 CloudFormation 托管在 ShardingSphere on Cloud 的仓库中。在 AWS Marketplace 上，可以获取相应的 AMI 信息，详见：[链接](https://us-east-1.console.aws.amazon.com/marketplace/home?region=ap-southeast-1#/subscriptions/ef146e06-20ca-4da4-8954-78a7c51b3c5a)。
+
+## Kubernetes 一键部署
+
+在 Kubernetes 上进行部署可以利用包管理器 Helm 完成。Helm 通过一组模板和变量声明组成的 Charts 描述部署结构，里面涉及的资源对象都是 Kubernetes 领域的工作负载，如 Deployment，Service，ConfigMap 等。每次版本更新都可以制作相应的 Charts 包，并且这些包可以提交到公开的制品仓库里，如 ArtifactHub 等。Apache ShardingSphere 每次发布新版本都会构建相应的 Helm Charts 包，相关的源码托管在 ShardingSphere on Cloud 仓库中。
diff --git a/docs/content/features/_index.cn.md b/docs/content/features/_index.cn.md
index de62940..0960b73 100644
--- a/docs/content/features/_index.cn.md
+++ b/docs/content/features/_index.cn.md
@@ -5,6 +5,4 @@ weight = 3
 chapter = true
 +++
 
-ShardingSphere-on-Cloud 中各类云环境下部署的 ShardingSphere 特性与官方版本特性保持一致。
-
-详见[链接](https://shardingsphere.apache.org/document/current/cn/features/)。
+ShardingSphere 在云环境下的特性和官方版本保持一致，详见[链接](https://shardingsphere.apache.org/document/current/cn/features/)。ShardingSphere on Cloud 从云上一键部署、数据库可靠性工程、混沌工程和生态扩展四个方面进行了相应的增强。
diff --git a/docs/content/overview/_index.cn.md b/docs/content/overview/_index.cn.md
index 46e0e9e..de47e18 100644
--- a/docs/content/overview/_index.cn.md
+++ b/docs/content/overview/_index.cn.md
@@ -5,7 +5,7 @@ weight = 1
 chapter = true
 +++
 
-## 什么是 ShardingSphere-on-cloud?
+## 什么是 ShardingSphere-on-cloud ?
 
 ShardingSphere-on-Cloud 项目是面向 Apache ShardingSphere 的云上解决方案集合，帮助用户在云环境下利用 ShardingSphere 将任意数据库转换为分布式数据库，并通过数据分片、弹性伸缩、加密等能力对原有数据库进行增强。
 
diff --git a/docs/content/overview/_index.en.md b/docs/content/overview/_index.en.md
index 1797e97..597be1a 100644
--- a/docs/content/overview/_index.en.md
+++ b/docs/content/overview/_index.en.md
@@ -5,7 +5,7 @@ weight = 1
 chapter = true
 +++
 
-## What is ShardingSphere-on-Cloud?
+## What is ShardingSphere-on-Cloud ?
 
 The ShardingSphere-on-Cloud project is a collection of tools and best practices to take Apache ShardingSphere into the cloud. It helps users to transform any database into a distributed database system, and enhance it with sharding, elastic scaling, encryption features & more. 
 
diff --git a/docs/content/quick-start/_index.cn.md b/docs/content/quick-start/_index.cn.md
index af1caf2..ee4d024 100644
--- a/docs/content/quick-start/_index.cn.md
+++ b/docs/content/quick-start/_index.cn.md
@@ -5,5 +5,7 @@ weight = 2
 chapter = true
 +++
 
-- [利用 Helm Charts 在 Kubernetes 一键部署 ShardingSphere Proxy 集群](/cn/quick-start/kubernetes-quick-deployment/)
+利用基础设施即代码的能力对 Apache ShardingSphere 部署结构进行描述，实现常见云环境下的快速部署，如 AWS 和 Kubernetes： 
+
 - [利用 CloudFormation 在 AWS 上一键部署 ShardingSphere Proxy 集群](/cn/quick-start/aws-quick-deployment/)
+- [利用 Helm Charts 在 Kubernetes 一键部署 ShardingSphere Proxy 集群](/cn/quick-start/kubernetes-quick-deployment/)
diff --git a/docs/content/quick-start/_index.en.md b/docs/content/quick-start/_index.en.md
index 368432a..e1f8728 100644
--- a/docs/content/quick-start/_index.en.md
+++ b/docs/content/quick-start/_index.en.md
@@ -5,5 +5,7 @@ weight = 2
 chapter = true
 +++
 
+Inspired by Infrastructure as Code, Apache ShardingSphere deployment is described and modeled in codes, and supports common cloud environment like AWS and Kubernetes quick deployment: 
+
 - [Using Helm Charts to deploy ShardingSphere Proxy on Kubernetes](/en/quick-start/kubernetes-quick-deployment/)
 - [Using CloudFormation to deploy ShardingSphere Proxy on AWS](/en/quick-start/aws-quick-deployment/)
diff --git a/docs/shardingsphere-helm-charts.md b/docs/shardingsphere-helm-charts.md
deleted file mode 100644
index 026aa76..0000000
--- a/docs/shardingsphere-helm-charts.md
+++ /dev/null
@@ -1,238 +0,0 @@
-# ShardingSphere Helm Charts Concise User Manual
-
-## Procedure
-
-### Online Installation
-
-1. Add SharedingSphere-Proxy to the local Helm warehouse:
-
-```shell
-helm repo add shardingsphere https://apache.github.io/shardingsphere-on-cloud
-helm repo update
-```
-
-2. Install ShardingSphere-Proxy Charts:
-
-```shell
-helm install shardingsphere-proxy shardingsphere/apache-shardingsphere-proxy-charts 
-```
-
-### Source Code Installation
-
-1. Charts can be configured and installed by default using the following command:
-
-```shell
-cd charts/apache-shardingsphere-proxy-charts/charts/governance
-helm dependency build 
-cd ../..
-helm dependency build 
-cd ..
-helm install shardingsphere-proxy apache-shardingsphere-proxy-charts
-```
-
-Note: Please refer to the configuration description below for details.
-
-2. Execute `helm list` to get the list of all installed releases.
-
-### Uninstallation
-
-1. By default, all publishing records are deleted and can be retained by adding '-- keep history'.
-
-```shell
-helm uninstall shardingsphere-proxy
-```
-
-## Parameter Description
-
-### Name parameters
-
-| Name              | Description                                                                                                | Value                         |
-|-------------------|------------------------------------------------------------------------------------------------------------|-------------------------------|
-| `nameOverride   ` | nameOverride String to partially override common.names.fullname template (will maintain the release name)  | `apache-shardingsphere-proxy` |
-
-### Governance Node Parameters
-
-| Name                 | Description                                           | Value  |
-| -------------------- | ----------------------------------------------------- | ------ |
-| `governance.enabled` | Switch to enable or disable the governance helm chart | `true` |
-
-### ZooKeeper Parameters of Governance Node
-
-| Name                                             | Description                                          | Value               |
-| ------------------------------------------------ | ---------------------------------------------------- | ------------------- |
-| `governance.zookeeper.enabled`                   | Switch to enable or disable the ZooKeeper helm chart | `true`              |
-| `governance.zookeeper.replicaCount`              | Number of ZooKeeper nodes                            | `1`                 |
-| `governance.zookeeper.persistence.enabled`       | Enable persistence on ZooKeeper using PVC(s)         | `false`             |
-| `governance.zookeeper.persistence.storageClass`  | Persistent Volume storage class                      | `""`                |
-| `governance.zookeeper.persistence.accessModes`   | Persistent Volume access modes                       | `["ReadWriteOnce"]` |
-| `governance.zookeeper.persistence.size`          | Persistent Volume size                               | `8Gi`               |
-| `governance.zookeeper.resources.limits`          | The resources limits for the ZooKeeper containers    | `{}`                |
-| `governance.zookeeper.resources.requests.memory` | The requested memory for the ZooKeeper containers    | `256Mi`             |
-| `governance.zookeeper.resources.requests.cpu`    | The requested cpu for the ZooKeeper containers       | `250m`              |
-
-### ShardingSphere-Proxy Parameters of Compute Node
-
-| Name                                | Description                                                  | Value                         |
-| ----------------------------------- | ------------------------------------------------------------ |-------------------------------|
-| `compute.image.repository`          | Image name of ShardingSphere-Proxy.                          | `apache/shardingsphere-proxy` |
-| `compute.image.pullPolicy`          | The policy for pulling ShardingSphere-Proxy image            | `IfNotPresent`                |
-| `compute.image.tag`                 | ShardingSphere-Proxy image tag                               | `5.2.0`                       |
-| `compute.imagePullSecrets`          | Specify docker-registry secret names as an array             | `[]`                          |
-| `compute.resources.limits`          | The resources limits for the ShardingSphere-Proxy containers | `{}`                          |
-| `compute.resources.requests.memory` | The requested memory for the ShardingSphere-Proxy containers | `2Gi`                         |
-| `compute.resources.requests.cpu`    | The requested cpu for the ShardingSphere-Proxy containers    | `200m`                        |
-| `compute.replicas`                  | Number of cluster replicas                                   | `3`                           |
-| `compute.service.type`              | ShardingSphere-Proxy network mode                            | `ClusterIP`                   |
-| `compute.service.port`              | ShardingSphere-Proxy expose port                             | `3307`                        |
-| `compute.mysqlConnector.version`    | MySQL connector version                                      | `5.1.49`                      |
-| `compute.startPort`                 | ShardingSphere-Proxy start port                              | `3307`                        |
-| `compute.serverConfig`              | Server Configuration file for ShardingSphere-Proxy            | `""`                          |
-
-## Example
-
-```yaml
-## @section Name parameters
-## @param nameOverride String to partially override common.names.fullname template (will maintain the release name)
-nameOverride: apache-shardingsphere-proxy
-## @section Governance-Node parameters
-## @param governance.enabled Switch to enable or disable the governance helm chart
-##
-governance:
-  enabled: true
-  ## @section Governance-Node ZooKeeper parameters
-  zookeeper:
-    ## @param governance.zookeeper.enabled Switch to enable or disable the ZooKeeper helm chart
-    ##
-    enabled: true
-    ## @param governance.zookeeper.replicaCount Number of ZooKeeper nodes
-    ##
-    replicaCount: 1
-    ## ZooKeeper Persistence parameters
-    ## ref: https://kubernetes.io/docs/user-guide/persistent-volumes/
-    ## @param governance.zookeeper.persistence.enabled Enable persistence on ZooKeeper using PVC(s)
-    ## @param governance.zookeeper.persistence.storageClass Persistent Volume storage class
-    ## @param governance.zookeeper.persistence.accessModes Persistent Volume access modes
-    ## @param governance.zookeeper.persistence.size Persistent Volume size
-    ##
-    persistence:
-      enabled: false
-      storageClass: ""
-      accessModes:
-        - ReadWriteOnce
-      size: 8Gi
-    ## ZooKeeper's resource requests and limits
-    ## ref: https://kubernetes.io/docs/user-guide/compute-resources/
-    ## @param governance.zookeeper.resources.limits The resources limits for the ZooKeeper containers
-    ## @param governance.zookeeper.resources.requests.memory The requested memory for the ZooKeeper containers
-    ## @param governance.zookeeper.resources.requests.cpu The requested cpu for the ZooKeeper containers
-    ##
-    resources:
-      limits: {}
-      requests:
-        memory: 256Mi
-        cpu: 250m
-
-## @section Compute-Node parameters
-## 
-compute:
-  ## @section Compute-Node ShardingSphere-Proxy parameters
-  ## ref: https://kubernetes.io/docs/concepts/containers/images/
-  ## @param compute.image.repository Image name of ShardingSphere-Proxy.
-  ## @param compute.image.pullPolicy The policy for pulling ShardingSphere-Proxy image
-  ## @param compute.image.tag ShardingSphere-Proxy image tag
-  ##
-  image:
-    repository: "apache/shardingsphere-proxy"
-    pullPolicy: IfNotPresent
-    ## Overrides the image tag whose default is the chart appVersion.
-    ##
-    tag: "5.2.1"
-  ## @param compute.imagePullSecrets Specify docker-registry secret names as an array
-  ## e.g：
-  ## imagePullSecrets:
-  ##   - name: myRegistryKeySecretName
-  ##
-  imagePullSecrets: []
-  ## ShardingSphere-Proxy resource requests and limits
-  ## ref: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
-  ## @param compute.resources.limits The resources limits for the ShardingSphere-Proxy containers
-  ## @param compute.resources.requests.memory The requested memory for the ShardingSphere-Proxy containers
-  ## @param compute.resources.requests.cpu The requested cpu for the ShardingSphere-Proxy containers
-  ##
-  resources:
-    limits: {}
-    requests:
-      memory: 2Gi
-      cpu: 200m
-  ## ShardingSphere-Proxy Deployment Configuration
-  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/
-  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/
-  ## @param compute.replicas Number of cluster replicas
-  ##
-  replicas: 3
-  ## @param compute.service.type ShardingSphere-Proxy network mode
-  ## @param compute.service.port ShardingSphere-Proxy expose port
-  ##
-  service:
-    type: ClusterIP
-    port: 3307
-  ## MySQL connector Configuration
-  ## ref: https://shardingsphere.apache.org/document/current/en/quick-start/shardingsphere-proxy-quick-start/
-  ## @param compute.mysqlConnector.version MySQL connector version
-  ##
-  mysqlConnector:
-    version: "5.1.43"
-  ## @param compute.startPort ShardingSphere-Proxy start port
-  ## ShardingSphere-Proxy start port
-  ## ref: https://shardingsphere.apache.org/document/current/en/user-manual/shardingsphere-proxy/startup/docker/
-  ##
-  startPort: 3307
-  ## @section Compute-Node ShardingSphere-Proxy ServerConfiguration parameters
-  ## NOTE: If you use the sub-charts to deploy Zookeeper, the server-lists field must be "{{ printf \"%s-zookeeper.%s:2181\" .Release.Name .Release.Namespace }}",
-  ## otherwise please fill in the correct zookeeper address
-  ## The server.yaml is auto-generated based on this parameter.
-  ## If it is empty, the server.yaml is also empty.
-  ## ref: https://shardingsphere.apache.org/document/current/en/user-manual/shardingsphere-jdbc/yaml-config/mode/
-  ## ref: https://shardingsphere.apache.org/document/current/en/user-manual/common-config/builtin-algorithm/metadata-repository/
-  ##
-  serverConfig:
-    ## @section Compute-Node ShardingSphere-Proxy ServerConfiguration authority parameters
-    ## NOTE: It is used to set up initial user to login compute node, and authority data of storage node.
-    ## ref: https://shardingsphere.apache.org/document/current/en/user-manual/shardingsphere-proxy/yaml-config/authentication/
-    ## @param compute.serverConfig.authority.privilege.type authority provider for storage node, the default value is ALL_PERMITTED
-    ## @param compute.serverConfig.authority.users[0].password Password for compute node.
-    ## @param compute.serverConfig.authority.users[0].user Username,authorized host for compute node. Format: <username>@<hostname> hostname is % or empty string means do not care about authorized host
-    ##
-    authority:
-      privilege:
-        type: ALL_PERMITTED
-      users:
-        - password: root
-          user: root@%
-    ## @section Compute-Node ShardingSphere-Proxy ServerConfiguration mode Configuration parameters
-    ## @param compute.serverConfig.mode.type Type of mode configuration. Now only support Cluster mode
-    ## @param compute.serverConfig.mode.repository.props.namespace Namespace of registry center
-    ## @param compute.serverConfig.mode.repository.props.server-lists Server lists of registry center
-    ## @param compute.serverConfig.mode.repository.props.maxRetries Max retries of client connection
-    ## @param compute.serverConfig.mode.repository.props.operationTimeoutMilliseconds Milliseconds of operation timeout
-    ## @param compute.serverConfig.mode.repository.props.retryIntervalMilliseconds Milliseconds of retry interval
-    ## @param compute.serverConfig.mode.repository.props.timeToLiveSeconds Seconds of ephemeral data live
-    ## @param compute.serverConfig.mode.repository.type Type of persist repository. Now only support ZooKeeper
-    ##
-    mode:
-      type: Cluster
-      repository:
-        type: ZooKeeper
-        props:
-          maxRetries: 3
-          namespace: governance_ds
-          operationTimeoutMilliseconds: 5000
-          retryIntervalMilliseconds: 500
-          server-lists: "{{ printf \"%s-zookeeper.%s:2181\" .Release.Name .Release.Namespace }}"
-          timeToLiveSeconds: 60
-    ## @param compute.serverConfig.props.proxy-frontend-database-protocol-type proxy frontend database protocol type. Only support: PostgreSQL,openGauss,MariaDB,MySQL
-    ##
-    props:
-      proxy-frontend-database-protocol-type: MySQL
-```
-
diff --git a/docs/shardingsphere-operator.md b/docs/shardingsphere-operator.md
deleted file mode 100644
index 450a173..0000000
--- a/docs/shardingsphere-operator.md
+++ /dev/null
@@ -1,309 +0,0 @@
-# ShardingSphere-Operator Concise User Manual
-
-## Install ShardingSphere-Operator
-
-The following configuration content and configuration file directory are: apache-shardingsphere-operator-charts/values.yaml.
-
-### Online Installation
-
-```shell
- kubectl create ns shardingsphere-operator
- helm repo add shardingsphere https://apache.github.io/shardingsphere-on-cloud
- helm repo update
- helm install shardingsphere-operator shardingsphere/apache-shardingsphere-operator-charts --version 0.1.0 -n shardingsphere-operator
-```
-
-### Source Code Installation
-
-```shell
-kubectl create ns shardingsphere-operator
-cd charts/apache-shardingsphere-operator-charts/
-helm dependency build
-cd ../
-helm install shardingsphere-operator apache-shardingsphere-operator-charts -n shardingsphere-operator
-```
-
-## ShardingSphere-Proxy Cluster Installation
-
-The following configuration content and configuration file directory are: apache-shardingsphere-operator-cluster-charts/values.yaml.
-
-### Online Installation
-
-```shell
-kubectl create ns shardingsphere
-helm repo add shardingsphere https://apache.github.io/shardingsphere-on-cloud
-helm repo update
-helm install shardingsphere shardingsphere/apache-shardingsphere-operator-cluster-charts --version 0.1.0 -n shardingsphere
-```
-
-### Source Code Installation
-
-```shell
-kubectl create ns shardingsphere
-cd charts/apache-shardingsphere-operator-cluster-charts
-helm dependency build
-cd ../
-helm install shardingsphere apache-shardingsphere-operator-cluster-charts -n shardingsphere
-```
-
-## Online Install ShardingSphere-Proxy Cluster and ShardingSphere-Operator
-
-```shell
-helm repo add shardingsphere https://apache.github.io/shardingsphere-on-cloud
-kubectl create ns  shardingsphere-operator
-helm install shardingsphere-operator shardingsphere/apache-shardingsphere-operator-charts --version 0.1.0
-kubectl create ns  shardingsphere
-helm install shardingsphere shardingsphere/apache-shardingsphere-operator-cluster-charts --version 0.1.0
-```
-
-## Parameters
-
-### ShardingSphere Operator Parameters
-
-| Name                     | Description                                                                                               | Value                            |
-|--------------------------|-----------------------------------------------------------------------------------------------------------|----------------------------------|
-| `nameOverride`           | nameOverride String to partially override common.names.fullname template (will maintain the release name) | `apache-shardingsphere-operator` |
-| `replicaCount`           | operator replica count                                                                                    | `2`                              |
-| `image.repository`       | operator image name                                                                                       | `shardingsphere-operator`        |
-| `image.pullPolicy`       | image pull policy                                                                                         | `IfNotPresent`                   |
-| `image.tag`              | image tag                                                                                                 | `0.0.1`                          |
-| `imagePullSecrets`       | image pull secret of private repository                                                                   | `[]`                             |
-| `resources`              | operator Resources required by the operator                                                               | `{}`                             |
-| `webhook.port`           | operator webhook boot port                                                                                | `9443`                           |
-| `health.healthProbePort` | operator health check port                                                                                | `8081`                           |
-
-### ShardingSphere-Proxy Cluster Parameters
-
-| Name                                | Description                                                                                                                                                                                        | Value                                    |
-|-------------------------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|------------------------------------------|
-| `nameOverride`                      | nameOverride String to partially override common.names.fullname template (will maintain the release name)                                                                                          | `apache-shardingsphere-operator-cluster` |
-| `replicaCount`                      | ShardingSphere-Proxy cluster starts the number of replicas, Note: After you enable automaticScaling, this parameter will no longer take effect                                                     | `3`                                      |
-| `proxyVersion`                      | ShardingSphere-Proxy cluster version                                                                                                                                                               | `5.2.0`                                  |
-| `automaticScaling.enable`           | ShardingSphere-Proxy Whether the ShardingSphere-Proxy cluster has auto-scaling enabled                                                                                                             | `false`                                  |
-| `automaticScaling.scaleUpWindows`   | ShardingSphere-Proxy automatically scales the stable window                                                                                                                                        | `30`                                     |
-| `automaticScaling.scaleDownWindows` | ShardingSphere-Proxy automatically shrinks the stabilized window                                                                                                                                   | `30`                                     |
-| `automaticScaling.target`           | ShardingSphere-Proxy auto-scaling threshold, the value is a percentage, note: at this stage, only cpu is supported as a metric for scaling                                                         | `20`                                     |
-| `automaticScaling.maxInstance`      | ShardingSphere-Proxy maximum number of scaled-out replicas                                                                                                                                         | `4`                                      |
-| `automaticScaling.minInstance`      | ShardingSphere-Proxy has a minimum number of boot replicas, and the shrinkage will not be less than this number of replicas                                                                        | `1`                                      |
-| `resources`                         | ShardingSphere-Proxy starts the requirement resource, and after opening automaticScaling, the resource of the request multiplied by the percentage of target is used to trigger the scaling action | `{}`                                     |
-| `service.type`                      | ShardingSphere-Proxy external exposure mode                                                                                                                                                        | `ClusterIP`                              |
-| `service.port`                      | ShardingSphere-Proxy exposes  port                                                                                                                                                                 | `3307`                                   |
-| `startPort`                         | ShardingSphere-Proxy boot port                                                                                                                                                                     | `3307`                                   |
-| `mySQLDriver.version`               | ShardingSphere-Proxy The ShardingSphere-Proxy mysql driver version will not be downloaded if it is empty                                                                                           | `5.1.47`                                 |
-
-### ShardingSphere-Proxy ServerConfig Authority Related Parameters of Compute Node
-
-| Name                                       | Description                                                                                                                                    | Value           |
-|--------------------------------------------|------------------------------------------------------------------------------------------------------------------------------------------------|-----------------|
-| `serverConfig.authority.privilege.type`    | authority provider for storage node, the default value is ALL_PERMITTED                                                                        | `ALL_PERMITTED` |
-| `serverConfig.authority.users[0].password` | Password for compute node.                                                                                                                     | `root`          |
-| `serverConfig.authority.users[0].user`     | Username,authorized host for compute node. Format: <username>@<hostname> hostname is % or empty string means do not care about authorized host | `root@%`        |
-
-### ShardingSphere-Proxy ServerConfig Mode Related Paraters of Compute Node
-
-| Name                                                              | Description                                                         | Value                                                                  |
-|-------------------------------------------------------------------|---------------------------------------------------------------------|------------------------------------------------------------------------|
-| `serverConfig.mode.type`                                          | Type of mode configuration. Now only support Cluster mode           | `Cluster`                                                              |
-| `serverConfig.mode.repository.props.namespace`                    | Namespace of registry center                                        | `governance_ds`                                                        |
-| `serverConfig.mode.repository.props.server-lists`                 | Server lists of registry center                                     | `{{ printf "%s-zookeeper.%s:2181" .Release.Name .Release.Namespace }}` |
-| `serverConfig.mode.repository.props.maxRetries`                   | Max retries of client connection                                    | `3`                                                                    |
-| `serverConfig.mode.repository.props.operationTimeoutMilliseconds` | Milliseconds of operation timeout                                   | `5000`                                                                 |
-| `serverConfig.mode.repository.props.retryIntervalMilliseconds`    | Milliseconds of retry interval                                      | `500`                                                                  |
-| `serverConfig.mode.repository.props.timeToLiveSeconds`            | Seconds of ephemeral data live                                      | `600`                                                                  |
-| `serverConfig.mode.repository.type`                               | Type of persist repository. Now only support ZooKeeper              | `ZooKeeper`                                                            |
-| `serverConfig.mode.overwrite`                                     | Whether overwrite persistent configuration with local configuration | `true`                                                                 |
-| `serverConfig.props.proxy-frontend-database-protocol-type`        | Default startup protocol                                            | `MySQL`                                                                |
-
-### ZooKeeper Chart Parameters
-
-| Name                                 | Description                                          | Value               |
-|--------------------------------------|------------------------------------------------------|---------------------|
-| `zookeeper.enabled`                  | Switch to enable or disable the ZooKeeper helm chart | `true`              |
-| `zookeeper.replicaCount`             | Number of ZooKeeper nodes                            | `1`                 |
-| `zookeeper.persistence.enabled`      | Enable persistence on ZooKeeper using PVC(s)         | `false`             |
-| `zookeeper.persistence.storageClass` | Persistent Volume storage class                      | `""`                |
-| `zookeeper.persistence.accessModes`  | Persistent Volume access modes                       | `["ReadWriteOnce"]` |
-| `zookeeper.persistence.size`         | Persistent Volume size                               | `8Gi`               |
-
-## Examples
-
-apache-shardingsphere-operator-charts/values.yaml
-
-```yaml
-## @section Name parameters
-## @param nameOverride String to partially override common.names.fullname template (will maintain the release name)
-##
-nameOverride: apache-shardingsphere-operator
-## @section ShardingSphere operator parameters
-## @param replicaCount operator replica count
-##
-replicaCount: 2
-image:
-  ## @param image.repository operator image name
-  ##
-  repository: "apache/shardingsphere-operator"
-  ## @param image.pullPolicy image pull policy
-  ##
-  pullPolicy: IfNotPresent
-  ## @param image.tag image tag
-  ##
-  tag: "0.2.0"
-## @param imagePullSecrets image pull secret of private repository
-## e.g:
-## imagePullSecrets:
-##   - name: mysecret
-##
-imagePullSecrets: []
-## @param resources operator Resources required by the operator
-## e.g:
-## resources:
-##   limits:
-##     cpu: 2
-##   limits:
-##     cpu: 2
-##
-resources: {}
-## @param webhook.port operator webhook boot port
-##
-webhook:
-  port: 9443
-## @param health.healthProbePort operator health check port
-##
-health:
-  healthProbePort: 8081
-
-```
-
-apache-shardingsphere-operator-cluster-charts/values.yaml
-
-```yaml
-## @section Name parameters
-## @param nameOverride String to partially override common.names.fullname template (will maintain the release name)
-##
-nameOverride: apache-shardingsphere-operator-cluster
-## @section ShardingSphere-Proxy cluster parameters
-## @param replicaCount ShardingSphere-Proxy cluster starts the number of replicas, Note: After you enable automaticScaling, this parameter will no longer take effect
-## @param proxyVersion ShardingSphere-Proxy cluster version
-##
-replicaCount: "3"
-proxyVersion: "5.2.1"
-## @param automaticScaling.enable ShardingSphere-Proxy Whether the ShardingSphere-Proxy cluster has auto-scaling enabled
-## @param automaticScaling.scaleUpWindows ShardingSphere-Proxy automatically scales the stable window
-## @param automaticScaling.scaleDownWindows ShardingSphere-Proxy automatically shrinks the stabilized window
-## @param automaticScaling.target ShardingSphere-Proxy auto-scaling threshold, the value is a percentage, note: at this stage, only cpu is supported as a metric for scaling
-## @param automaticScaling.maxInstance ShardingSphere-Proxy maximum number of scaled-out replicas
-## @param automaticScaling.minInstance ShardingSphere-Proxy has a minimum number of boot replicas, and the shrinkage will not be less than this number of replicas
-##
-automaticScaling:
-  enable: false
-  scaleUpWindows: 30
-  scaleDownWindows: 30
-  target: 20
-  maxInstance: 4
-  minInstance: 1
-## @param resources ShardingSphere-Proxy starts the requirement resource, and after opening automaticScaling, the resource of the request multiplied by the percentage of target is used to trigger the scaling action
-## e.g:
-## resources:
-##   limits:
-##     cpu: 2
-##   requests:
-##     cpu: 2
-##
-resources: {}
-## @param service.type ShardingSphere-Proxy external exposure mode
-## @param service.port ShardingSphere-Proxy exposes  port
-##
-service:
-  type: ClusterIP
-  port: 3307
-## @param startPort ShardingSphere-Proxy boot port
-##
-startPort: 3307
-## @param mySQLDriver.version ShardingSphere-Proxy The ShardingSphere-Proxy mysql driver version will not be downloaded if it is empty
-##
-mySQLDriver:
-  version: "5.1.43"
-## @param imagePullSecrets ShardingSphere-Proxy pull private image repository key
-## e.g:
-## imagePullSecrets:
-##   - name: mysecret
-##
-imagePullSecrets: []
-## @section  ShardingSphere-Proxy ServerConfiguration parameters
-## NOTE: If you use the sub-charts to deploy Zookeeper, the server-lists field must be "{{ printf \"%s-zookeeper.%s:2181\" .Release.Name .Release.Namespace }}",
-## otherwise please fill in the correct zookeeper address
-## The server.yaml is auto-generated based on this parameter.
-## If it is empty, the server.yaml is also empty.
-## ref: https://shardingsphere.apache.org/document/current/en/user-manual/shardingsphere-jdbc/yaml-config/mode/
-## ref: https://shardingsphere.apache.org/document/current/en/user-manual/shardingsphere-jdbc/builtin-algorithm/metadata-repository/
-##
-serverConfig:
-  ## @section Compute-Node ShardingSphere-Proxy ServerConfiguration authority parameters
-  ## NOTE: It is used to set up initial user to login compute node, and authority data of storage node.
-  ## @param serverConfig.authority.privilege.type authority provider for storage node, the default value is ALL_PERMITTED
-  ## @param serverConfig.authority.users[0].password Password for compute node.
-  ## @param serverConfig.authority.users[0].user Username,authorized host for compute node. Format: <username>@<hostname> hostname is % or empty string means do not care about authorized host
-  ##
-  authority:
-    privilege:
-      type: ALL_PERMITTED
-    users:
-      - password: root
-        user: root@%
-  ## @section Compute-Node ShardingSphere-Proxy ServerConfiguration mode Configuration parameters
-  ## @param serverConfig.mode.type Type of mode configuration. Now only support Cluster mode
-  ## @param serverConfig.mode.repository.props.namespace Namespace of registry center
-  ## @param serverConfig.mode.repository.props.server-lists Server lists of registry center
-  ## @param serverConfig.mode.repository.props.maxRetries Max retries of client connection
-  ## @param serverConfig.mode.repository.props.operationTimeoutMilliseconds Milliseconds of operation timeout
-  ## @param serverConfig.mode.repository.props.retryIntervalMilliseconds Milliseconds of retry interval
-  ## @param serverConfig.mode.repository.props.timeToLiveSeconds Seconds of ephemeral data live
-  ## @param serverConfig.mode.repository.type Type of persist repository. Now only support ZooKeeper
-  ## @param serverConfig.props.proxy-frontend-database-protocol-type Default startup protocol
-  mode:
-    repository:
-      props:
-        maxRetries: 3
-        namespace: governance_ds
-        operationTimeoutMilliseconds: 5000
-        retryIntervalMilliseconds: 500
-        server-lists: "{{ printf \"%s-zookeeper.%s:2181\" .Release.Name .Release.Namespace }}"
-        timeToLiveSeconds: 600
-      type: ZooKeeper
-    type: Cluster
-  props:
-    proxy-frontend-database-protocol-type: MySQL
-## @section ZooKeeper chart parameters
-
-## ZooKeeper chart configuration
-## https://github.com/bitnami/charts/blob/master/bitnami/zookeeper/values.yaml
-##
-zookeeper:
-  ## @param zookeeper.enabled Switch to enable or disable the ZooKeeper helm chart
-  ##
-  enabled: true
-  ## @param zookeeper.replicaCount Number of ZooKeeper nodes
-  ##
-  replicaCount: 1
-  ## ZooKeeper Persistence parameters
-  ## ref: https://kubernetes.io/docs/user-guide/persistent-volumes/
-  ## @param zookeeper.persistence.enabled Enable persistence on ZooKeeper using PVC(s)
-  ## @param zookeeper.persistence.storageClass Persistent Volume storage class
-  ## @param zookeeper.persistence.accessModes Persistent Volume access modes
-  ## @param zookeeper.persistence.size Persistent Volume size
-  ##
-  persistence:
-    enabled: false
-    storageClass: ""
-    accessModes:
-      - ReadWriteOnce
-    size: 8Gi
-```
-
-## Clean
-
-```shell
-helm uninstall shardingsphere -n shardingsphere
-helm uninstall shardingsphere-operator -n shardingsphere-operator
-kubectl delete crd shardingsphereproxies.shardingsphere.apache.org shardingsphereproxyserverconfigs.shardingsphere.apache.org
-```
diff --git a/docs/startup-shardingsphere-proxy-with-cloudformation.md b/docs/startup-shardingsphere-proxy-with-cloudformation.md
deleted file mode 100644
index ce82a4e..0000000
--- a/docs/startup-shardingsphere-proxy-with-cloudformation.md
+++ /dev/null
@@ -1,69 +0,0 @@
-# Startup ShardingSphere Proxy with CloudFormation
-
-As we know that AWS CloudFormation is an easy to use tool for setup any environments and infrastructure in an Infrasture as Code way. Since it is really helpful, we proposed this CloudFormation Stack template to help people who want to try Apache ShardingSphere on AWS in minutes.
-
-## Prerequesites 
-
-Before we start, there are several items on the checklist. 
-
-- [ ] Region ap-north-1, currently the AMI contains Apache ShardingSphere Proxy and related components is only available in ap-north-1
-- [ ] An VPC where we place Apache ShardingSphere Proxy 
-- [ ] A designed CIDR and Subnets of this VPC
-- [ ] A SecurityGroup which allows application(e.g. 3307) and control traffic(e.g. 22)
-- [ ] A keypair for these instances 
-- [ ] Any tags for this stack 
-
-## Setup a ShardingSphere Proxy cluster
-
-### 1. Create a CloudFormation stack with new resources  
-
-As below shows
-
-![](./images/cfn-1.png)
-![](./images/cfn-2.png)
-
-### 2. Upload the template file in this repo
-
-Upload local file as `cloudformation/apache-shardingsphere-5.2.0.json` to CloudFormation, then click `Next`.
-
-![](./images/cfn-3.png)
-![](./images/cfn-4.png)
-
-### 3. Specify CloudFormation stack details
-
-Fill the blanks in this pages, the required informations are prepared in [](#prerequesite)
-
-![](./images/cfn-5.png)
-
-### 4. Configure Stack Options
-
-Add some tags to mark this stack. This is always useful for cost analysis.
-
-![](./images/cfn-6.png)
-
-### 5. Review and ensure the configuration
-
-Review the configuration and submit it if everything is expteced.
-
-![](./images/cfn-7.png)
-
-### 6. Check the EC2 instances
-
-After several minutes, the EC2 instances are spinned up.
-
-![](./images/cfn-8.png)
-
-### 7. Check ShardingSphere Proxy and Zookeeper status 
-
-Use `systemctl status shardingsphere` and `./bin/zkServer.sh status` to check the status of both components
-
-![](./images/cfn-11.png)
-![](./images/cfn-12.png)
-
-### 8. Test with a simple sharding Demo
-
-Try to create a database `sharding_db` and add two seperate database instances `resources`. Then create sharded table `t_order` and insert two rows. Check this result like below:
-
-![](./images/cfn-9.png)
-![](./images/cfn-10.jpeg)
-![](./images/cfn-13.jpeg)
\ No newline at end of file
