commit 675b20bc7ff60541ce3f55c62b1ec9778453ea68
Author: zhaojinchao <zhaojinchao@apache.org>
Date:   Wed Jun 28 19:16:10 2023 +0800

    Refactor about metadata structure document (#26665)

diff --git a/docs/document/content/dev-manual/configuration.cn.md b/docs/document/content/dev-manual/configuration.cn.md
index d5a62f3ce6b..ce11df42774 100644
--- a/docs/document/content/dev-manual/configuration.cn.md
+++ b/docs/document/content/dev-manual/configuration.cn.md
@@ -32,7 +32,7 @@ chapter = true
 
 ### 全限定类名
 
-[`org.apache.shardingsphere.infra.yaml.config.swapper.YamlRuleConfigurationSwapper`](https://github.com/apache/shardingsphere/blob/master/infra/common/src/main/java/org/apache/shardingsphere/infra/yaml/config/swapper/rule/YamlRuleConfigurationSwapper.java)
+[`org.apache.shardingsphere.infra.yaml.config.swapper.NewYamlRuleConfigurationSwapper`](https://github.com/apache/shardingsphere/blob/master/infra/common/src/main/java/org/apache/shardingsphere/infra/yaml/config/swapper/rule/NewYamlRuleConfigurationSwapper.java)
 
 ### 定义
 
@@ -42,15 +42,15 @@ chapter = true
 
 | *配置标识*              | *详细说明*                            | *全限定类名*                                                                                                                                                                                                                                                                                                                          |
 |---------------------|-----------------------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
-| AUTHORITY           | 用于将权限规则的 YAML 配置转化为权限规则标准配置       | [`org.apache.shardingsphere.authority.yaml.swapper.YamlAuthorityRuleConfigurationSwapper`](https://github.com/apache/shardingsphere/blob/master/kernel/authority/core/src/main/java/org/apache/shardingsphere/authority/yaml/swapper/YamlAuthorityRuleConfigurationSwapper.java)                                                 |
-| SQL_PARSER          | 用于将 SQL 解析的 YAML 配置转化为 SQL 解析标准配置 | [`org.apache.shardingsphere.parser.yaml.swapper.YamlSQLParserRuleConfigurationSwapper`](https://github.com/apache/shardingsphere/blob/master/kernel/sql-parser/core/src/main/java/org/apache/shardingsphere/parser/yaml/swapper/YamlSQLParserRuleConfigurationSwapper.java)                                                          |
-| TRANSACTION         | 用于将事务的 YAML 配置转化为事务标准配置           | [`org.apache.shardingsphere.transaction.yaml.swapper.YamlTransactionRuleConfigurationSwapper`](https://github.com/apache/shardingsphere/blob/master/kernel/transaction/core/src/main/java/org/apache/shardingsphere/transaction/yaml/swapper/YamlTransactionRuleConfigurationSwapper.java)                                       |
-| SINGLE              | 用于将单表的 YAML 配置转化为单表标准配置           | [`org.apache.shardingsphere.singletable.yaml.config.swapper.YamlSingleRuleConfigurationSwapper`](https://github.com/apache/shardingsphere/blob/master/kernel/single/core/src/main/java/org/apache/shardingsphere/single/yaml/config/swapper/YamlSingleRuleConfigurationSwapper.java)                                  |
-| SHARDING            | 用于将分片的 YAML 配置转化为分片标准配置           | [`org.apache.shardingsphere.sharding.yaml.swapper.YamlShardingRuleConfigurationSwapper`](https://github.com/apache/shardingsphere/blob/master/features/sharding/core/src/main/java/org/apache/shardingsphere/sharding/yaml/swapper/YamlShardingRuleConfigurationSwapper.java)                                                    |
-| READWRITE_SPLITTING | 用于将读写分离的 YAML 配置转化为读写分离标准配置       | [`org.apache.shardingsphere.readwritesplitting.yaml.swapper.YamlReadwriteSplittingRuleConfigurationSwapper`](https://github.com/apache/shardingsphere/blob/master/features/readwrite-splitting/core/src/main/java/org/apache/shardingsphere/readwritesplitting/yaml/swapper/YamlReadwriteSplittingRuleConfigurationSwapper.java) |
-| ENCRYPT             | 用于将加密的 YAML 配置转化为加密标准配置           | [`org.apache.shardingsphere.encrypt.yaml.swapper.YamlEncryptRuleConfigurationSwapper`](https://github.com/apache/shardingsphere/blob/master/features/encrypt/core/src/main/java/org/apache/shardingsphere/encrypt/yaml/swapper/YamlEncryptRuleConfigurationSwapper.java)                                                         |
-| SHADOW              | 用于将影子库的 YAML 配置转化为影子库标准配置         | [`org.apache.shardingsphere.shadow.yaml.swapper.YamlShadowRuleConfigurationSwapper`](https://github.com/apache/shardingsphere/blob/master/features/shadow/core/src/main/java/org/apache/shardingsphere/shadow/yaml/swapper/YamlShadowRuleConfigurationSwapper.java)                                                              |
-| SQL_TRANSLATOR      | 用于将 SQL 转换的 YAML 配置转化为 SQL 转换标准配置 | [`org.apache.shardingsphere.sqltranslator.yaml.swapper.YamlSQLTranslatorRuleConfigurationSwapper`](https://github.com/apache/shardingsphere/blob/master/kernel/sql-translator/core/src/main/java/org/apache/shardingsphere/sqltranslator/yaml/swapper/YamlSQLTranslatorRuleConfigurationSwapper.java)                            |
+| AUTHORITY           | 用于将权限规则的 YAML 配置转化为权限规则标准配置       | [`org.apache.shardingsphere.authority.yaml.swapper.NewYamlAuthorityRuleConfigurationSwapper`](https://github.com/apache/shardingsphere/blob/master/kernel/authority/core/src/main/java/org/apache/shardingsphere/authority/yaml/swapper/NewYamlAuthorityRuleConfigurationSwapper.java)                                                 |
+| SQL_PARSER          | 用于将 SQL 解析的 YAML 配置转化为 SQL 解析标准配置 | [`org.apache.shardingsphere.parser.yaml.swapper.NewYamlSQLParserRuleConfigurationSwapper`](https://github.com/apache/shardingsphere/blob/master/kernel/sql-parser/core/src/main/java/org/apache/shardingsphere/parser/yaml/swapper/NewYamlSQLParserRuleConfigurationSwapper.java)                                                          |
+| TRANSACTION         | 用于将事务的 YAML 配置转化为事务标准配置           | [`org.apache.shardingsphere.transaction.yaml.swapper.NewYamlTransactionRuleConfigurationSwapper`](https://github.com/apache/shardingsphere/blob/master/kernel/transaction/core/src/main/java/org/apache/shardingsphere/transaction/yaml/swapper/NewYamlTransactionRuleConfigurationSwapper.java)                                       |
+| SINGLE              | 用于将单表的 YAML 配置转化为单表标准配置           | [`org.apache.shardingsphere.singletable.yaml.config.swapper.NewYamlSingleRuleConfigurationSwapper`](https://github.com/apache/shardingsphere/blob/master/kernel/single/core/src/main/java/org/apache/shardingsphere/single/yaml/config/swapper/NewYamlSingleRuleConfigurationSwapper.java)                                  |
+| SHARDING            | 用于将分片的 YAML 配置转化为分片标准配置           | [`org.apache.shardingsphere.sharding.yaml.swapper.NewYamlShardingRuleConfigurationSwapper`](https://github.com/apache/shardingsphere/blob/master/features/sharding/core/src/main/java/org/apache/shardingsphere/sharding/yaml/swapper/NewYamlShardingRuleConfigurationSwapper.java)                                                    |
+| READWRITE_SPLITTING | 用于将读写分离的 YAML 配置转化为读写分离标准配置       | [`org.apache.shardingsphere.readwritesplitting.yaml.swapper.NewYamlReadwriteSplittingRuleConfigurationSwapper`](https://github.com/apache/shardingsphere/blob/master/features/readwrite-splitting/core/src/main/java/org/apache/shardingsphere/readwritesplitting/yaml/swapper/NewYamlReadwriteSplittingRuleConfigurationSwapper.java) |
+| ENCRYPT             | 用于将加密的 YAML 配置转化为加密标准配置           | [`org.apache.shardingsphere.encrypt.yaml.swapper.NewYamlEncryptRuleConfigurationSwapper`](https://github.com/apache/shardingsphere/blob/master/features/encrypt/core/src/main/java/org/apache/shardingsphere/encrypt/yaml/swapper/NewYamlEncryptRuleConfigurationSwapper.java)                                                         |
+| SHADOW              | 用于将影子库的 YAML 配置转化为影子库标准配置         | [`org.apache.shardingsphere.shadow.yaml.swapper.NewYamlShadowRuleConfigurationSwapper`](https://github.com/apache/shardingsphere/blob/master/features/shadow/core/src/main/java/org/apache/shardingsphere/shadow/yaml/swapper/NewYamlShadowRuleConfigurationSwapper.java)                                                              |
+| SQL_TRANSLATOR      | 用于将 SQL 转换的 YAML 配置转化为 SQL 转换标准配置 | [`org.apache.shardingsphere.sqltranslator.yaml.swapper.NewYamlSQLTranslatorRuleConfigurationSwapper`](https://github.com/apache/shardingsphere/blob/master/kernel/sql-translator/core/src/main/java/org/apache/shardingsphere/sqltranslator/yaml/swapper/NewYamlSQLTranslatorRuleConfigurationSwapper.java)                            |
 
 ## ShardingSphereYamlConstruct
 
diff --git a/docs/document/content/dev-manual/configuration.en.md b/docs/document/content/dev-manual/configuration.en.md
index 745b460f2e5..9182fb941d1 100644
--- a/docs/document/content/dev-manual/configuration.en.md
+++ b/docs/document/content/dev-manual/configuration.en.md
@@ -32,7 +32,7 @@ Used to convert user configurations into rule objects
 
 ### Fully-qualified class name
 
-[`org.apache.shardingsphere.infra.yaml.config.swapper.YamlRuleConfigurationSwapper`](https://github.com/apache/shardingsphere/blob/master/infra/common/src/main/java/org/apache/shardingsphere/infra/yaml/config/swapper/rule/YamlRuleConfigurationSwapper.java)
+[`org.apache.shardingsphere.infra.yaml.config.swapper.NewYamlRuleConfigurationSwapper`](https://github.com/apache/shardingsphere/blob/master/infra/common/src/main/java/org/apache/shardingsphere/infra/yaml/config/swapper/rule/NewYamlRuleConfigurationSwapper.java)
 
 ### Definition
 
@@ -42,15 +42,15 @@ Used to convert YAML configuration to standard user configuration
 
 | *Configuration Type* | *Description*                                                                                                          | *Fully-qualified class name*                                                                                                                                                                                                                                                                                                     |
 |----------------------|------------------------------------------------------------------------------------------------------------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
-| AUTHORITY            | Used to convert the YAML configuration of authority rules into standard configuration of authority rules               | [`org.apache.shardingsphere.authority.yaml.swapper.YamlAuthorityRuleConfigurationSwapper`](https://github.com/apache/shardingsphere/blob/master/kernel/authority/core/src/main/java/org/apache/shardingsphere/authority/yaml/swapper/YamlAuthorityRuleConfigurationSwapper.java)                                                 |
-| SQL_PARSER           | Used to convert the YAML configuration of the SQL parser into the standard configuration of the SQL parser             | [`org.apache.shardingsphere.parser.yaml.swapper.YamlSQLParserRuleConfigurationSwapper`](https://github.com/apache/shardingsphere/blob/master/kernel/sql-parser/core/src/main/java/org/apache/shardingsphere/parser/yaml/swapper/YamlSQLParserRuleConfigurationSwapper.java)                                                          |
-| TRANSACTION          | Used to convert the YAML configuration of the transaction into the standard configuration of the transaction           | [`org.apache.shardingsphere.transaction.yaml.swapper.YamlTransactionRuleConfigurationSwapper`](https://github.com/apache/shardingsphere/blob/master/kernel/transaction/core/src/main/java/org/apache/shardingsphere/transaction/yaml/swapper/YamlTransactionRuleConfigurationSwapper.java)                                       |
-| SINGLE               | Used to convert the YAML configuration of the single table into the standard configuration of the single table         | [`org.apache.shardingsphere.singletable.yaml.config.swapper.YamlSingleRuleConfigurationSwapper`](https://github.com/apache/shardingsphere/blob/master/kernel/single/core/src/main/java/org/apache/shardingsphere/single/yaml/config/swapper/YamlSingleRuleConfigurationSwapper.java)                                  |
-| SHARDING             | Used to convert the YAML configuration of the sharding into the standard configuration of the sharding                 | [`org.apache.shardingsphere.sharding.yaml.swapper.YamlShardingRuleConfigurationSwapper`](https://github.com/apache/shardingsphere/blob/master/features/sharding/core/src/main/java/org/apache/shardingsphere/sharding/yaml/swapper/YamlShardingRuleConfigurationSwapper.java)                                                    |
-| READWRITE_SPLITTING  | Used to convert the YAML configuration of read-write splitting into the standard configuration of read-write splitting | [`org.apache.shardingsphere.readwritesplitting.yaml.swapper.YamlReadwriteSplittingRuleConfigurationSwapper`](https://github.com/apache/shardingsphere/blob/master/features/readwrite-splitting/core/src/main/java/org/apache/shardingsphere/readwritesplitting/yaml/swapper/YamlReadwriteSplittingRuleConfigurationSwapper.java) |
-| ENCRYPT              | Used to convert encrypted YAML configuration into encrypted standard configuration                                     | [`org.apache.shardingsphere.encrypt.yaml.swapper.YamlEncryptRuleConfigurationSwapper`](https://github.com/apache/shardingsphere/blob/master/features/encrypt/core/src/main/java/org/apache/shardingsphere/encrypt/yaml/swapper/YamlEncryptRuleConfigurationSwapper.java)                                                         |
-| SHADOW               | Used to convert the YAML configuration of the shadow database into the standard configuration of the shadow database   | [`org.apache.shardingsphere.shadow.yaml.swapper.YamlShadowRuleConfigurationSwapper`](https://github.com/apache/shardingsphere/blob/master/features/shadow/core/src/main/java/org/apache/shardingsphere/shadow/yaml/swapper/YamlShadowRuleConfigurationSwapper.java)                                                              |
-| SQL_TRANSLATOR       | Used to convert the YAML configuration of the SQL transformation to the SQL transformation standard configuration      | [`org.apache.shardingsphere.sqltranslator.yaml.swapper.YamlSQLTranslatorRuleConfigurationSwapper`](https://github.com/apache/shardingsphere/blob/master/kernel/sql-translator/core/src/main/java/org/apache/shardingsphere/sqltranslator/yaml/swapper/YamlSQLTranslatorRuleConfigurationSwapper.java)                            |
+| AUTHORITY            | Used to convert the YAML configuration of authority rules into standard configuration of authority rules               | [`org.apache.shardingsphere.authority.yaml.swapper.NewYamlAuthorityRuleConfigurationSwapper`](https://github.com/apache/shardingsphere/blob/master/kernel/authority/core/src/main/java/org/apache/shardingsphere/authority/yaml/swapper/NewYamlAuthorityRuleConfigurationSwapper.java)                                                 |
+| SQL_PARSER           | Used to convert the YAML configuration of the SQL parser into the standard configuration of the SQL parser             | [`org.apache.shardingsphere.parser.yaml.swapper.NewYamlSQLParserRuleConfigurationSwapper`](https://github.com/apache/shardingsphere/blob/master/kernel/sql-parser/core/src/main/java/org/apache/shardingsphere/parser/yaml/swapper/NewYamlSQLParserRuleConfigurationSwapper.java)                                                          |
+| TRANSACTION          | Used to convert the YAML configuration of the transaction into the standard configuration of the transaction           | [`org.apache.shardingsphere.transaction.yaml.swapper.NewYamlTransactionRuleConfigurationSwapper`](https://github.com/apache/shardingsphere/blob/master/kernel/transaction/core/src/main/java/org/apache/shardingsphere/transaction/yaml/swapper/NewYamlTransactionRuleConfigurationSwapper.java)                                       |
+| SINGLE               | Used to convert the YAML configuration of the single table into the standard configuration of the single table         | [`org.apache.shardingsphere.singletable.yaml.config.swapper.NewYamlSingleRuleConfigurationSwapper`](https://github.com/apache/shardingsphere/blob/master/kernel/single/core/src/main/java/org/apache/shardingsphere/single/yaml/config/swapper/NewYamlSingleRuleConfigurationSwapper.java)                                  |
+| SHARDING             | Used to convert the YAML configuration of the sharding into the standard configuration of the sharding                 | [`org.apache.shardingsphere.sharding.yaml.swapper.NewYamlShardingRuleConfigurationSwapper`](https://github.com/apache/shardingsphere/blob/master/features/sharding/core/src/main/java/org/apache/shardingsphere/sharding/yaml/swapper/NewYamlShardingRuleConfigurationSwapper.java)                                                    |
+| READWRITE_SPLITTING  | Used to convert the YAML configuration of read-write splitting into the standard configuration of read-write splitting | [`org.apache.shardingsphere.readwritesplitting.yaml.swapper.NewYamlReadwriteSplittingRuleConfigurationSwapper`](https://github.com/apache/shardingsphere/blob/master/features/readwrite-splitting/core/src/main/java/org/apache/shardingsphere/readwritesplitting/yaml/swapper/NewYamlReadwriteSplittingRuleConfigurationSwapper.java) |
+| ENCRYPT              | Used to convert encrypted YAML configuration into encrypted standard configuration                                     | [`org.apache.shardingsphere.encrypt.yaml.swapper.NewYamlEncryptRuleConfigurationSwapper`](https://github.com/apache/shardingsphere/blob/master/features/encrypt/core/src/main/java/org/apache/shardingsphere/encrypt/yaml/swapper/NewYamlEncryptRuleConfigurationSwapper.java)                                                         |
+| SHADOW               | Used to convert the YAML configuration of the shadow database into the standard configuration of the shadow database   | [`org.apache.shardingsphere.shadow.yaml.swapper.NewYamlShadowRuleConfigurationSwapper`](https://github.com/apache/shardingsphere/blob/master/features/shadow/core/src/main/java/org/apache/shardingsphere/shadow/yaml/swapper/NewYamlShadowRuleConfigurationSwapper.java)                                                              |
+| SQL_TRANSLATOR       | Used to convert the YAML configuration of the SQL transformation to the SQL transformation standard configuration      | [`org.apache.shardingsphere.sqltranslator.yaml.swapper.NewYamlSQLTranslatorRuleConfigurationSwapper`](https://github.com/apache/shardingsphere/blob/master/kernel/sql-translator/core/src/main/java/org/apache/shardingsphere/sqltranslator/yaml/swapper/NewYamlSQLTranslatorRuleConfigurationSwapper.java)                            |
 
 ## ShardingSphereYamlConstruct
 
diff --git a/docs/document/content/dev-manual/mode.cn.md b/docs/document/content/dev-manual/mode.cn.md
index f117e1a79ae..49535be3a2a 100644
--- a/docs/document/content/dev-manual/mode.cn.md
+++ b/docs/document/content/dev-manual/mode.cn.md
@@ -40,11 +40,11 @@ chapter = true
 | Nacos     | 基于 Nacos 的持久化     | [`org.apache.shardingsphere.mode.repository.cluster.nacos.NacosRepository`](https://github.com/apache/shardingsphere/blob/master/mode/type/cluster/repository/provider/nacos/src/main/java/org/apache/shardingsphere/mode/repository/cluster/nacos/NacosRepository.java)                     |
 | Consul    | 基于 Consul 的持久化    | [`org.apache.shardingsphere.mode.repository.cluster.consul.ConsulRepository`](https://github.com/apache/shardingsphere/blob/master/mode/type/cluster/repository/provider/consul/src/main/java/org/apache/shardingsphere/mode/repository/cluster/consul/ConsulRepository.java)                |
 
-## GovernanceWatcher
+## NewGovernanceWatcher
 
 ### 全限定类名
 
-[`org.apache.shardingsphere.mode.manager.cluster.coordinator.registry.GovernanceWatcher`](https://github.com/apache/shardingsphere/blob/master/mode/type/cluster/core/src/main/java/org/apache/shardingsphere/mode/manager/cluster/coordinator/registry/GovernanceWatcher.java)
+[`org.apache.shardingsphere.mode.manager.cluster.coordinator.registry.NewGovernanceWatcher`](https://github.com/apache/shardingsphere/blob/master/mode/type/cluster/core/src/main/java/org/apache/shardingsphere/mode/manager/cluster/coordinator/registry/NewGovernanceWatcher.java)
 
 ### 定义
 
@@ -56,8 +56,8 @@ chapter = true
 |---------------------------------------------------------------------------|-------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
 | Types: ADDED, UPDATED, DELETED; WatchingKeys: /nodes/compute_nodes/status | 集群状态变化监听器   | [`org.apache.shardingsphere.mode.manager.cluster.coordinator.registry.status.cluster.watcher.ClusterStateChangedWatcher`](https://github.com/apache/shardingsphere/blob/master/mode/type/cluster/core/src/main/java/org/apache/shardingsphere/mode/manager/cluster/coordinator/registry/status/cluster/watcher/ClusterStateChangedWatcher.java)         |
 | Types: ADDED, UPDATED, DELETED; WatchingKeys: /nodes/compute_nodes        | 计算节点状态变化监听器 | [`org.apache.shardingsphere.mode.manager.cluster.coordinator.registry.status.compute.watcher.ComputeNodeStateChangedWatcher`](https://github.com/apache/shardingsphere/blob/master/mode/type/cluster/core/src/main/java/org/apache/shardingsphere/mode/manager/cluster/coordinator/registry/status/compute/watcher/ComputeNodeStateChangedWatcher.java) |
-| Types: ADDED, UPDATED, DELETED; WatchingKeys: /metadata/${databaseName}   | 元数据变化监听器    | [`org.apache.shardingsphere.mode.manager.cluster.coordinator.registry.metadata.watcher.MetaDataChangedWatcher`](https://github.com/apache/shardingsphere/blob/master/mode/type/cluster/core/src/main/java/org/apache/shardingsphere/mode/manager/cluster/coordinator/registry/metadata/watcher/MetaDataChangedWatcher.java)                             |
-| Types: ADDED, UPDATED; WatchingKeys: /props                               | 属性变化监听器     | [`org.apache.shardingsphere.mode.manager.cluster.coordinator.registry.config.watcher.PropertiesChangedWatcher`](https://github.com/apache/shardingsphere/blob/master/mode/type/cluster/core/src/main/java/org/apache/shardingsphere/mode/manager/cluster/coordinator/registry/config/watcher/PropertiesChangedWatcher.java)                             |
-| Types: UPDATED; WatchingKeys: /rules                                      | 全局规则变化监听器   | [`org.apache.shardingsphere.mode.manager.cluster.coordinator.registry.config.watcher.GlobalRuleChangedWatcher`](https://github.com/apache/shardingsphere/blob/master/mode/type/cluster/core/src/main/java/org/apache/shardingsphere/mode/manager/cluster/coordinator/registry/config/watcher/GlobalRuleChangedWatcher.java)                             |
+| Types: ADDED, UPDATED, DELETED; WatchingKeys: /metadata/${databaseName}   | 元数据变化监听器    | [`org.apache.shardingsphere.mode.manager.cluster.coordinator.registry.metadata.watcher.NewMetaDataChangedWatcher`](https://github.com/apache/shardingsphere/blob/master/mode/type/cluster/core/src/main/java/org/apache/shardingsphere/mode/manager/cluster/coordinator/registry/metadata/watcher/NewMetaDataChangedWatcher.java)                             |
+| Types: ADDED, UPDATED; WatchingKeys: /props                               | 属性变化监听器     | [`org.apache.shardingsphere.mode.manager.cluster.coordinator.registry.config.watcher.NewPropertiesChangedWatcher`](https://github.com/apache/shardingsphere/blob/master/mode/type/cluster/core/src/main/java/org/apache/shardingsphere/mode/manager/cluster/coordinator/registry/config/watcher/NewPropertiesChangedWatcher.java)                             |
+| Types: ADDED, UPDATED; WatchingKeys: /rules                               | 全局规则变化监听器   | [`org.apache.shardingsphere.mode.manager.cluster.coordinator.registry.config.watcher.NewGlobalRuleChangedWatcher`](https://github.com/apache/shardingsphere/blob/master/mode/type/cluster/core/src/main/java/org/apache/shardingsphere/mode/manager/cluster/coordinator/registry/config/watcher/NewGlobalRuleChangedWatcher.java)                             |
 | Types: ADDED, UPDATED, DELETED; WatchingKeys: /sys_data                   | 系统库变化监听器    | [`org.apache.shardingsphere.mode.manager.cluster.coordinator.registry.config.watcher.ShardingSphereDataChangedWatcher`](https://github.com/apache/shardingsphere/blob/master/mode/type/cluster/core/src/main/java/org/apache/shardingsphere/mode/manager/cluster/coordinator/registry/data/ShardingSphereDataChangedWatcher.java)                       |
 | Types: ADDED, UPDATED, DELETED; WatchingKeys: /nodes/storage_nodes        | 存储节点状态变化监听器 | [`org.apache.shardingsphere.mode.manager.cluster.coordinator.registry.status.storage.watcher.StorageNodeStateChangedWatcher`](https://github.com/apache/shardingsphere/blob/master/mode/type/cluster/core/src/main/java/org/apache/shardingsphere/mode/manager/cluster/coordinator/registry/status/storage/watcher/StorageNodeStateChangedWatcher.java) |
diff --git a/docs/document/content/dev-manual/mode.en.md b/docs/document/content/dev-manual/mode.en.md
index 70a0363a1a0..49b6abda6eb 100644
--- a/docs/document/content/dev-manual/mode.en.md
+++ b/docs/document/content/dev-manual/mode.en.md
@@ -40,11 +40,11 @@ Cluster mode configuration information persistence definition
 | Nacos                | Nacos based persistence     | [`org.apache.shardingsphere.mode.repository.cluster.nacos.NacosRepository`](https://github.com/apache/shardingsphere/blob/master/mode/type/cluster/repository/provider/nacos/src/main/java/org/apache/shardingsphere/mode/repository/cluster/nacos/NacosRepository.java)                     |
 | Consul               | Consul based persistence    | [`org.apache.shardingsphere.mode.repository.cluster.consul.ConsulRepository`](https://github.com/apache/shardingsphere/blob/master/mode/type/cluster/repository/provider/consul/src/main/java/org/apache/shardingsphere/mode/repository/cluster/consul/ConsulRepository.java)                |
 
-## GovernanceWatcher
+## NewGovernanceWatcher
 
 ### Fully-qualified class name
 
-[`org.apache.shardingsphere.mode.manager.cluster.coordinator.registry.GovernanceWatcher`](https://github.com/apache/shardingsphere/blob/master/mode/type/cluster/core/src/main/java/org/apache/shardingsphere/mode/manager/cluster/coordinator/registry/GovernanceWatcher.java)
+[`org.apache.shardingsphere.mode.manager.cluster.coordinator.registry.NewGovernanceWatcher`](https://github.com/apache/shardingsphere/blob/master/mode/type/cluster/core/src/main/java/org/apache/shardingsphere/mode/manager/cluster/coordinator/registry/NewGovernanceWatcher.java)
 
 ### Definition
 
@@ -56,8 +56,8 @@ Governance listener definition
 |---------------------------------------------------------------------------|-----------------------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
 | Types: ADDED, UPDATED, DELETED; WatchingKeys: /nodes/compute_nodes/status | Cluster state change listener                 | [`org.apache.shardingsphere.mode.manager.cluster.coordinator.registry.status.cluster.watcher.ClusterStateChangedWatcher`](https://github.com/apache/shardingsphere/blob/master/mode/type/cluster/core/src/main/java/org/apache/shardingsphere/mode/manager/cluster/coordinator/registry/status/cluster/watcher/ClusterStateChangedWatcher.java)         |
 | Types: ADDED, UPDATED, DELETED; WatchingKeys: /nodes/compute_nodes        | Compute node state change listener            | [`org.apache.shardingsphere.mode.manager.cluster.coordinator.registry.status.compute.watcher.ComputeNodeStateChangedWatcher`](https://github.com/apache/shardingsphere/blob/master/mode/type/cluster/core/src/main/java/org/apache/shardingsphere/mode/manager/cluster/coordinator/registry/status/compute/watcher/ComputeNodeStateChangedWatcher.java) |
-| Types: ADDED, UPDATED, DELETED; WatchingKeys: /metadata/${databaseName}   | Metadata change listener                      | [`org.apache.shardingsphere.mode.manager.cluster.coordinator.registry.metadata.watcher.MetaDataChangedWatcher`](https://github.com/apache/shardingsphere/blob/master/mode/type/cluster/core/src/main/java/org/apache/shardingsphere/mode/manager/cluster/coordinator/registry/metadata/watcher/MetaDataChangedWatcher.java)                             |
-| Types: ADDED, UPDATED; WatchingKeys: /props                               | Property change listener                      | [`org.apache.shardingsphere.mode.manager.cluster.coordinator.registry.config.watcher.PropertiesChangedWatcher`](https://github.com/apache/shardingsphere/blob/master/mode/type/cluster/core/src/main/java/org/apache/shardingsphere/mode/manager/cluster/coordinator/registry/config/watcher/PropertiesChangedWatcher.java)                             |
-| Types: UPDATED; WatchingKeys: /rules                                      | The global rule configuration change listener | [`org.apache.shardingsphere.mode.manager.cluster.coordinator.registry.config.watcher.GlobalRuleChangedWatcher`](https://github.com/apache/shardingsphere/blob/master/mode/type/cluster/core/src/main/java/org/apache/shardingsphere/mode/manager/cluster/coordinator/registry/config/watcher/GlobalRuleChangedWatcher.java)                             |
+| Types: ADDED, UPDATED, DELETED; WatchingKeys: /metadata/${databaseName}   | Metadata change listener                      | [`org.apache.shardingsphere.mode.manager.cluster.coordinator.registry.metadata.watcher.NewMetaDataChangedWatcher`](https://github.com/apache/shardingsphere/blob/master/mode/type/cluster/core/src/main/java/org/apache/shardingsphere/mode/manager/cluster/coordinator/registry/metadata/watcher/NewMetaDataChangedWatcher.java)                             |
+| Types: ADDED, UPDATED; WatchingKeys: /props                               | Property change listener                      | [`org.apache.shardingsphere.mode.manager.cluster.coordinator.registry.config.watcher.NewPropertiesChangedWatcher`](https://github.com/apache/shardingsphere/blob/master/mode/type/cluster/core/src/main/java/org/apache/shardingsphere/mode/manager/cluster/coordinator/registry/config/watcher/NewPropertiesChangedWatcher.java)                             |
+| Types: ADDED, UPDATED; WatchingKeys: /rules                               | The global rule configuration change listener | [`org.apache.shardingsphere.mode.manager.cluster.coordinator.registry.config.watcher.NewGlobalRuleChangedWatcher`](https://github.com/apache/shardingsphere/blob/master/mode/type/cluster/core/src/main/java/org/apache/shardingsphere/mode/manager/cluster/coordinator/registry/config/watcher/NewGlobalRuleChangedWatcher.java)                             |
 | Types: ADDED, UPDATED, DELETED; WatchingKeys: /sys_data                   | System database change listener               | [`org.apache.shardingsphere.mode.manager.cluster.coordinator.registry.config.watcher.ShardingSphereDataChangedWatcher`](https://github.com/apache/shardingsphere/blob/master/mode/type/cluster/core/src/main/java/org/apache/shardingsphere/mode/manager/cluster/coordinator/registry/data/ShardingSphereDataChangedWatcher.java)                       |
 | Types: ADDED, UPDATED, DELETED; WatchingKeys: /nodes/storage_nodes        | Storage node state change listener            | [`org.apache.shardingsphere.mode.manager.cluster.coordinator.registry.status.storage.watcher.StorageNodeStateChangedWatcher`](https://github.com/apache/shardingsphere/blob/master/mode/type/cluster/core/src/main/java/org/apache/shardingsphere/mode/manager/cluster/coordinator/registry/status/storage/watcher/StorageNodeStateChangedWatcher.java) |
diff --git a/docs/document/content/faq/_index.cn.md b/docs/document/content/faq/_index.cn.md
index c9d33d4ca9a..74381333308 100644
--- a/docs/document/content/faq/_index.cn.md
+++ b/docs/document/content/faq/_index.cn.md
@@ -5,6 +5,14 @@ weight = 8
 chapter = true
 +++
 
+## MODE
+
+### [MODE] 集群模式 `Cluster` 和 `Compatible_Cluster` 区别?
+
+回答:
+
+在 5.4.0 版本中调整了元数据存储结构，`Cluster` 代表新版本的元数据结构，`Compatible_Cluster` 则代表 5.4.0 之前版本的元数据结构。
+
 ## JDBC
 
 ### [JDBC] 引入 `shardingsphere-transaction-xa-core` 后，如何避免 spring-boot 自动加载默认的 JtaTransactionManager？
diff --git a/docs/document/content/faq/_index.en.md b/docs/document/content/faq/_index.en.md
index 295e6ffc70b..96f8a8ed067 100644
--- a/docs/document/content/faq/_index.en.md
+++ b/docs/document/content/faq/_index.en.md
@@ -5,6 +5,15 @@ weight = 8
 chapter = true
 +++
 
+## MODE
+
+### [MODE] What is the difference between cluster mode `Cluster` and `Compatible_Cluster`?
+
+Answer:
+
+The metadata structure was adjusted in version 5.4.0, `Cluster` represents the metadata structure of the new version, 
+and `Compatible_Cluster` represents the metadata structure of versions before 5.4.0.
+
 ## JDBC
 
 ### [JDBC] Found a JtaTransactionManager in spring boot project when integrating with XAtransaction.
diff --git a/docs/document/content/reference/management/_index.cn.md b/docs/document/content/reference/management/_index.cn.md
index 7c3cab740f1..0ed136cbbf0 100644
--- a/docs/document/content/reference/management/_index.cn.md
+++ b/docs/document/content/reference/management/_index.cn.md
@@ -8,30 +8,61 @@ weight = 3
 
 在定义的命名空间下，`rules` 、`props` 和 `metadata` 节点以 YAML 格式存储配置，可通过修改节点来实现对于配置的动态管理。
 `nodes` 存储数据库访问对象运行节点，用于区分不同数据库访问实例。
-`sys_data` 存储系统表中的数据记录。
+`statistics` 存储系统表中的数据记录。
 
 ```
 namespace
-   ├──rules                                   # 全局规则配置
-   ├──props                                   # 属性配置
-   ├──metadata                                # Metadata 配置
-   ├     ├──${databaseName}                   # 逻辑数据库名称
-   ├     ├     ├──schemas                     # Schema 列表   
-   ├     ├     ├     ├──${schemaName}         # 逻辑 Schema 名称
-   ├     ├     ├     ├     ├──tables          # 表结构配置
-   ├     ├     ├     ├     ├     ├──${tableName} 
+   ├──rules                                             # 全局规则配置
+   ├     ├──transaction
+   ├     ├     ├──active_version                                     
+   ├     ├     ├──versions  
+   ├     ├     ├     ├──0       
+   ├──props                                              # 属性配置
+   ├     ├──active_verison                                     
+   ├     ├──versions  
+   ├     ├     ├──0                  
+   ├──metadata                                           # Metadata 配置
+   ├     ├──${databaseName} 
+   ├     ├     ├──data_sources                           # 存储单元结构配置
+   ├     ├     ├     ├──${dataSourceName}                        
+   ├     ├     ├     ├     ├──active_verison             # 激活版本                                 
+   ├     ├     ├     ├     ├──versions                   # 版本号
+   ├     ├     ├     ├     ├     ├──0
+   ├     ├     ├     ├──...                                
+   ├     ├     ├──schemas                                # Schema 列表   
+   ├     ├     ├     ├──${schemaName}                    
+   ├     ├     ├     ├     ├──tables                     # 表结构配置
+   ├     ├     ├     ├     ├     ├──${tableName}         
+   ├     ├     ├     ├     ├     ├     ├──active_verison # 激活版本                                 
+   ├     ├     ├     ├     ├     ├     ├──versions       # 版本号
+   ├     ├     ├     ├     ├     ├     ├     ├──0
    ├     ├     ├     ├     ├     ├──...  
-   ├     ├     ├     ├     ├──views          # 视图结构配置
-   ├     ├     ├     ├     ├     ├──${viewName} 
+   ├     ├     ├     ├     ├──views                      # 视图结构配置
+   ├     ├     ├     ├     ├     ├──${viewName}
+   ├     ├     ├     ├     ├     ├     ├──active_verison # 激活版本                           
+   ├     ├     ├     ├     ├     ├     ├──versions       # 版本号
+   ├     ├     ├     ├     ├     ├     ├     ├──0
    ├     ├     ├     ├     ├     ├──...  
-   ├     ├     ├     ├──...    
-   ├     ├     ├──versions                    # 元数据版本列表      
-   ├     ├     ├     ├──${versionNumber}      # 元数据版本号
-   ├     ├     ├     ├     ├──data_sources     # 数据源配置
-   ├     ├     ├     ├     ├──rules           # 规则配置   
-   ├     ├     ├     ├──...
-   ├     ├     ├──active_version              # 激活的元数据版本号
-   ├     ├──...      
+   ├     ├     ├──rules
+   ├     ├     ├     ├──sharding
+   ├     ├     ├     ├     ├──algorithms
+   ├     ├     ├     ├     ├     ├──${algorithmName}     # algorithm 名称
+   ├     ├     ├     ├     ├     ├     ├──active_verison # 激活版本                           
+   ├     ├     ├     ├     ├     ├     ├──versions       # 版本号
+   ├     ├     ├     ├     ├     ├     ├     ├──0
+   ├     ├     ├     ├     ├     ├──...
+   ├     ├     ├     ├     ├──key_generators
+   ├     ├     ├     ├     ├     ├──${keyGeneratorName}  # keyGenerator名称
+   ├     ├     ├     ├     ├     ├     ├──active_verison # 激活版本                           
+   ├     ├     ├     ├     ├     ├     ├──versions       # 版本号
+   ├     ├     ├     ├     ├     ├     ├     ├──0
+   ├     ├     ├     ├     ├     ├──...         
+   ├     ├     ├     ├     ├──tables
+   ├     ├     ├     ├     ├     ├──${tableName}         # 逻辑表名称
+   ├     ├     ├     ├     ├     ├     ├──active_verison # 激活版本                           
+   ├     ├     ├     ├     ├     ├     ├──versions       # 版本号
+   ├     ├     ├     ├     ├     ├     ├     ├──0
+   ├     ├     ├     ├     ├     ├──...          
    ├──nodes
    ├    ├──compute_nodes
    ├    ├     ├──online
@@ -56,7 +87,7 @@ namespace
    ├    ├──storage_nodes                       
    ├    ├     ├──${databaseName.groupName.ds} 
    ├    ├     ├──${databaseName.groupName.ds}
-   ├──sys_data
+   ├──statistics
    ├    ├──shardingsphere
    ├    ├     ├──schemas
    ├    ├     ├     ├──shardingsphere
@@ -68,14 +99,12 @@ namespace
 
 ### /rules
 
-全局规则配置，可包含事务配置、SQL 解析配置等。
+全局规则配置，事务配置。
 
-```yaml
+```
 transaction:
   defaultType: XA
   providerType: Atomikos
-sqlParser:
-  sqlCommentParseEnabled: true
 ```
 
 ### /props
@@ -87,9 +116,9 @@ kernel-executor-size: 20
 sql-show: true
 ```
 
-### /metadata/${databaseName}/versions/${versionNumber}/dataSources
+### /metadata/${databaseName}/data_sources/ds_0/versions/0
 
-多个数据库连接池的集合，不同数据库连接池属性自适配（例如：DBCP，C3P0，Druid，HikariCP）。
+数据库连接池的，不同数据库连接池属性自适配（例如：DBCP，C3P0，Druid，HikariCP）。
 
 ```yaml
 ds_0:
@@ -106,40 +135,35 @@ ds_0:
   connectionTimeout: 30000
   username: root
   poolName: HikariPool-1
-ds_1:
-  initializationFailTimeout: 1
-  validationTimeout: 5000
-  maxLifetime: 1800000
-  leakDetectionThreshold: 0
-  minimumIdle: 1
-  password: root
-  idleTimeout: 60000
-  jdbcUrl: jdbc:mysql://127.0.0.1:3306/ds_1?serverTimezone=UTC&useSSL=false
-  dataSourceClassName: com.zaxxer.hikari.HikariDataSource
-  maximumPoolSize: 50
-  connectionTimeout: 30000
-  username: root
-  poolName: HikariPool-2
 ```
 
-### /metadata/${databaseName}/versions/${versionNumber}/rules
+### /metadata/${databaseName}/rules/sharding/tables/t_order/versions/0
 
-规则配置，可包括数据分片、读写分离、数据加密、影子库压测等配置。
+分片规则配置。
 
 ```yaml
-- !SHARDING
-  xxx
-  
-- !READWRITE_SPLITTING
-  xxx
-  
-- !ENCRYPT
-  xxx
+actualDataNodes: ds_${0..1}.t_order_${0..1}
+auditStrategy:
+  allowHintDisable: true
+  auditorNames:
+    - t_order_dml_sharding_conditions_0
+databaseStrategy:
+  standard:
+    shardingAlgorithmName: t_order_database_inline
+    shardingColumn: user_id
+keyGenerateStrategy:
+  column: another_id
+  keyGeneratorName: t_order_snowflake
+logicTable: t_order
+tableStrategy:
+  standard:
+    shardingAlgorithmName: t_order_table_inline
+    shardingColumn: order_id
 ```
 
-### /metadata/${databaseName}/schemas/${schemaName}/tables
+### /metadata/${databaseName}/schemas/${schemaName}/tables/t_order/versions/0
 
-表结构配置，每个表使用单独节点存储，暂不支持动态修改。
+表结构配置，每个表使用单独节点存储。
 
 ```yaml
 name: t_order                             # 表名
diff --git a/docs/document/content/reference/management/_index.en.md b/docs/document/content/reference/management/_index.en.md
index d7a7b933aae..675b7a42ede 100644
--- a/docs/document/content/reference/management/_index.en.md
+++ b/docs/document/content/reference/management/_index.en.md
@@ -6,32 +6,63 @@ weight = 3
 
 ## Data Structure in Registry Center
 
-Under defined namespace, `rules`, `props` and `metadata` nodes persist in YAML. Modifying nodes can dynamically refresh configurations. 
+Under defined namespace, `rules`, `props` and `metadata` nodes persist in YAML. Modifying nodes can dynamically refresh configurations.
 `nodes` persist the runtime node of database access object, to distinguish different database access instances.
 `sys_data` persist data records in system tables.
 
 ```
 namespace
-   ├──rules                                   # Global rule configuration
-   ├──props                                   # Properties configuration
-   ├──metadata                                # Metadata configuration
-   ├     ├──${databaseName}                   # Logic database name
-   ├     ├     ├──schemas                     # Schema list   
-   ├     ├     ├     ├──${schemaName}         # Logic schema name
-   ├     ├     ├     ├     ├──tables          # Table configuration
-   ├     ├     ├     ├     ├     ├──${tableName} 
+   ├──rules                                              # Global rule configuration
+   ├     ├──transaction
+   ├     ├     ├──active_version                                     
+   ├     ├     ├──versions  
+   ├     ├     ├     ├──0       
+   ├──props                                              # Properties configuration
+   ├     ├──active_verison                                     
+   ├     ├──versions  
+   ├     ├     ├──0                  
+   ├──metadata                                           # Metadata configuration
+   ├     ├──${databaseName} 
+   ├     ├     ├──data_sources                           # Storage unit configuration
+   ├     ├     ├     ├──${dataSourceName}                        
+   ├     ├     ├     ├     ├──active_verison             # Active version                                 
+   ├     ├     ├     ├     ├──versions                   # version list
+   ├     ├     ├     ├     ├     ├──0
+   ├     ├     ├     ├──...                                
+   ├     ├     ├──schemas                                # Schema list
+   ├     ├     ├     ├──${schemaName}                    
+   ├     ├     ├     ├     ├──tables                     # Table configuration
+   ├     ├     ├     ├     ├     ├──${tableName}         
+   ├     ├     ├     ├     ├     ├     ├──active_verison # Active version                                 
+   ├     ├     ├     ├     ├     ├     ├──versions       # version list
+   ├     ├     ├     ├     ├     ├     ├     ├──0
    ├     ├     ├     ├     ├     ├──...  
-   ├     ├     ├     ├     ├──views          # View configuration
-   ├     ├     ├     ├     ├     ├──${viewName} 
+   ├     ├     ├     ├     ├──views                      # View configuration
+   ├     ├     ├     ├     ├     ├──${viewName}
+   ├     ├     ├     ├     ├     ├     ├──active_verison # Active version                           
+   ├     ├     ├     ├     ├     ├     ├──versions       # version list
+   ├     ├     ├     ├     ├     ├     ├     ├──0
    ├     ├     ├     ├     ├     ├──...  
-   ├     ├     ├     ├──...    
-   ├     ├     ├──versions                    # Metadata version list      
-   ├     ├     ├     ├──${versionNumber}      # Metadata version
-   ├     ├     ├     ├     ├──data_sources     # Data source configuration
-   ├     ├     ├     ├     ├──rules           # Rule configuration  
-   ├     ├     ├     ├──...
-   ├     ├     ├──active_version              # Active metadata version
-   ├     ├──...      
+   ├     ├     ├──rules
+   ├     ├     ├     ├──sharding
+   ├     ├     ├     ├     ├──algorithms
+   ├     ├     ├     ├     ├     ├──${algorithmName}     # algorithm name
+   ├     ├     ├     ├     ├     ├     ├──active_verison # Active version                           
+   ├     ├     ├     ├     ├     ├     ├──versions       # version list
+   ├     ├     ├     ├     ├     ├     ├     ├──0
+   ├     ├     ├     ├     ├     ├──...
+   ├     ├     ├     ├     ├──key_generators
+   ├     ├     ├     ├     ├     ├──${keyGeneratorName}  # keyGenerator name
+   ├     ├     ├     ├     ├     ├     ├──active_verison # Active version                           
+   ├     ├     ├     ├     ├     ├     ├──versions       # version list
+   ├     ├     ├     ├     ├     ├     ├     ├──0
+   ├     ├     ├     ├     ├     ├──...         
+   ├     ├     ├     ├     ├──tables
+   ├     ├     ├     ├     ├     ├──${tableName}         # logic table name
+   ├     ├     ├     ├     ├     ├     ├──active_verison # Active version                           
+   ├     ├     ├     ├     ├     ├     ├──versions       # version list
+   ├     ├     ├     ├     ├     ├     ├     ├──0
+   ├     ├     ├     ├     ├     ├──...          
    ├──nodes
    ├    ├──compute_nodes
    ├    ├     ├──online
@@ -56,7 +87,7 @@ namespace
    ├    ├──storage_nodes                       
    ├    ├     ├──${databaseName.groupName.ds} 
    ├    ├     ├──${databaseName.groupName.ds}
-   ├──sys_data
+   ├──statistics
    ├    ├──shardingsphere
    ├    ├     ├──schemas
    ├    ├     ├     ├──shardingsphere
@@ -68,14 +99,12 @@ namespace
 
 ### /rules
 
-These are the global rule configurations, which can include transaction configuration, SQL parser configuration, etc.
+These are the global rule configurations, transaction configuration.
 
-```yaml
+```
 transaction:
   defaultType: XA
   providerType: Atomikos
-sqlParser:
-  sqlCommentParseEnabled: true
 ```
 
 ### /props
@@ -87,9 +116,9 @@ kernel-executor-size: 20
 sql-show: true
 ```
 
-### /metadata/${databaseName}/versions/${versionNumber}/dataSources
+### /metadata/${databaseName}/data_sources/ds_0/versions/0
 
-A collection of multiple database connection pools, whose properties (e.g. DBCP, C3P0, Druid and HikariCP) are configured by the users.
+Database connection pools, whose properties (e.g. DBCP, C3P0, Druid and HikariCP) are configured by the users.
 
 ```yaml
 ds_0:
@@ -106,40 +135,35 @@ ds_0:
   connectionTimeout: 30000
   username: root
   poolName: HikariPool-1
-ds_1:
-  initializationFailTimeout: 1
-  validationTimeout: 5000
-  maxLifetime: 1800000
-  leakDetectionThreshold: 0
-  minimumIdle: 1
-  password: root
-  idleTimeout: 60000
-  jdbcUrl: jdbc:mysql://127.0.0.1:3306/ds_1?serverTimezone=UTC&useSSL=false
-  dataSourceClassName: com.zaxxer.hikari.HikariDataSource
-  maximumPoolSize: 50
-  connectionTimeout: 30000
-  username: root
-  poolName: HikariPool-2
 ```
 
-### /metadata/${databaseName}/versions/${versionNumber}/rules
+### /metadata/${databaseName}/rules/sharding/tables/t_order/versions/0
 
-Rule configurations, including sharding, read/write splitting, data encryption, and shadow DB configurations.
+Sharding configuration。
 
 ```yaml
-- !SHARDING
-  xxx
-  
-- !READWRITE_SPLITTING
-  xxx
-  
-- !ENCRYPT
-  xxx
+actualDataNodes: ds_${0..1}.t_order_${0..1}
+auditStrategy:
+  allowHintDisable: true
+  auditorNames:
+    - t_order_dml_sharding_conditions_0
+databaseStrategy:
+  standard:
+    shardingAlgorithmName: t_order_database_inline
+    shardingColumn: user_id
+keyGenerateStrategy:
+  column: another_id
+  keyGeneratorName: t_order_snowflake
+logicTable: t_order
+tableStrategy:
+  standard:
+    shardingAlgorithmName: t_order_table_inline
+    shardingColumn: order_id
 ```
 
-### /metadata/${databaseName}/schemas/${schemaName}/tables
+### /metadata/${databaseName}/schemas/${schemaName}/tables/t_order/versions/0
 
-Use separate node storage for each table, dynamic modification of metadata content is not supported currently.
+Use separate node storage for each table.
 
 ```yaml
 name: t_order                             # Table name
@@ -163,7 +187,7 @@ indexs:                                   # Index
 
 ### /nodes/compute_nodes
 
-It includes running instance information of database access object, with sub-nodes as the identifiers of the currently running instance, which is automatically generated at each startup using UUID. 
+It includes running instance information of database access object, with sub-nodes as the identifiers of the currently running instance, which is automatically generated at each startup using UUID.
 
 The identifiers are temporary nodes, which are registered when instances are online and cleared when instances are offline. The registry center monitors the change of those nodes to govern the database access of running instances and other things.
 
