commit 24d4f5d0fb429651e7d2a25c7a55b481ccef3f17
Author: 孙念君 Nianjun Sun <sunnianjun@apache.org>
Date:   Tue Jun 20 20:50:02 2023 +0800

    Fix deadlink (#26462)
    
    * Fix : remove pagination link which is not exists(#26456)
    
    * Fix : remove pagination link which is not exists(#26456)
    
    * Fix : remove the link in faq which does't exist (#26456)
    
    * Remove : remove the link checker
    
    * Fix : fix the incorrect link for openGauss (#26456)
    
    * Fix : fix the incorrect link in blog (#26456)
    
    * Fix : fix the incorrect link for encryption (#26456)

diff --git "a/docs/blog/content/material/2023_04_13_Revamped_ShardingSphere_On_Cloud_What\342\200\231s_New_in_Version_0.2.0_with_CRD_ComputeNode.en.md" "b/docs/blog/content/material/2023_04_13_Revamped_ShardingSphere_On_Cloud_What\342\200\231s_New_in_Version_0.2.0_with_CRD_ComputeNode.en.md"
index e02e1d9e65b..50199b31c57 100644
--- "a/docs/blog/content/material/2023_04_13_Revamped_ShardingSphere_On_Cloud_What\342\200\231s_New_in_Version_0.2.0_with_CRD_ComputeNode.en.md"
+++ "b/docs/blog/content/material/2023_04_13_Revamped_ShardingSphere_On_Cloud_What\342\200\231s_New_in_Version_0.2.0_with_CRD_ComputeNode.en.md"
@@ -6,7 +6,7 @@ chapter = true
 
 Apache ShardingSphere-On-Cloud recently released version 0.2.0, which includes a new CRD ComputeNode for ShardingSphere Operator. This new feature enables users to define computing nodes fully within the ShardingSphere architecture.
 
-![img](https://shardingsphere.apache.org/blog/img/2023_04_13_Revamped_ShardingSphere_On_Cloud_What’s_New_in_Version_0.2.0_with_CRD_ComputeNode.en.md1.jpeg)
+![img](https://shardingsphere.apache.org/blog/img/2023_04_13_Revamped_ShardingSphere_On_Cloud_What’s_New_in_Version_0.2.0_with_CRD_ComputeNode.en.md1.jpg)
 
 # Introduction to ComputeNode
 
@@ -18,11 +18,11 @@ The computing node refers to the ShardingSphere Proxy, which acts as the entry p
 
 The storage node is the environment that stores various ShardingSphere metadata, such as sharding rules, encryption rules, and read-write splitting rules. Governance node components include Zookeeper, Etcd, etc.
 
-![img](https://shardingsphere.apache.org/blog/img/2023_04_13_Revamped_ShardingSphere_On_Cloud_What’s_New_in_Version_0.2.0_with_CRD_ComputeNode.en.md2.jpeg)
+![img](https://shardingsphere.apache.org/blog/img/2023_04_13_Revamped_ShardingSphere_On_Cloud_What’s_New_in_Version_0.2.0_with_CRD_ComputeNode.en.md2.jpg)
 
 In version 0.1.x of ShardingSphere Operator, two CRD components, Proxy and ProxyServerConfig, were introduced to describe the deployment and configuration of ShardingSphere Proxy, as shown in the figure below.
 
-![img](https://shardingsphere.apache.org/blog/img/2023_04_13_Revamped_ShardingSphere_On_Cloud_What’s_New_in_Version_0.2.0_with_CRD_ComputeNode.en.md3.jpeg)
+![img](https://shardingsphere.apache.org/blog/img/2023_04_13_Revamped_ShardingSphere_On_Cloud_What’s_New_in_Version_0.2.0_with_CRD_ComputeNode.en.md3.jpg)
 
 These components enable basic maintenance and deployment capabilities for ShardingSphere Proxy, which are sufficient for Proof of Concept (PoC) environments.
 
@@ -32,12 +32,12 @@ However, for the Operator to be useful in production environments, it must be ab
 
 To address these management capabilities, ShardingSphere-On-Cloud has introduced ComputeNode, which can handle these functions within a specific group of objects. The first object is ComputeNode, as shown in the figure below:
 
-![img](https://shardingsphere.apache.org/blog/img/2023_04_13_Revamped_ShardingSphere_On_Cloud_What’s_New_in_Version_0.2.0_with_CRD_ComputeNode.en.md4.jpeg)
+![img](https://shardingsphere.apache.org/blog/img/2023_04_13_Revamped_ShardingSphere_On_Cloud_What’s_New_in_Version_0.2.0_with_CRD_ComputeNode.en.md4.jpg)
 
 
 Compared with Proxy and ProxyServerConfig, ComputeNode brings changes such as cross-version upgrades, horizontal elastic scaling, and configuration security. ComputeNode is still in the v1alpha1 stage and needs to be enabled through a feature gate.
 
-![img](https://shardingsphere.apache.org/blog/img/2023_04_13_Revamped_ShardingSphere_On_Cloud_What’s_New_in_Version_0.2.0_with_CRD_ComputeNode.en.md5.jpeg)
+![img](https://shardingsphere.apache.org/blog/img/2023_04_13_Revamped_ShardingSphere_On_Cloud_What’s_New_in_Version_0.2.0_with_CRD_ComputeNode.en.md5.jpg)
 
 
 # ComputeNode Practice
@@ -50,13 +50,13 @@ helm repo add shardingsphere-on-cloud https://charts.shardingsphere.io
 helm install shardingsphere-on-cloud/shardingsphere-operator - version 0.2.0 - generate-name
 ```
 
-![img](https://shardingsphere.apache.org/blog/img/2023_04_13_Revamped_ShardingSphere_On_Cloud_What’s_New_in_Version_0.2.0_with_CRD_ComputeNode.en.md6.jpeg)
+![img](https://shardingsphere.apache.org/blog/img/2023_04_13_Revamped_ShardingSphere_On_Cloud_What’s_New_in_Version_0.2.0_with_CRD_ComputeNode.en.md6.jpg)
 
-![img](https://shardingsphere.apache.org/blog/img/2023_04_13_Revamped_ShardingSphere_On_Cloud_What’s_New_in_Version_0.2.0_with_CRD_ComputeNode.en.md7.jpeg)
+![img](https://shardingsphere.apache.org/blog/img/2023_04_13_Revamped_ShardingSphere_On_Cloud_What’s_New_in_Version_0.2.0_with_CRD_ComputeNode.en.md7.jpg)
 
 - The deployment status of the ShardingSphere Proxy cluster can be checked using `kubectl get pod`:
 
-![img](https://shardingsphere.apache.org/blog/img/2023_04_13_Revamped_ShardingSphere_On_Cloud_What’s_New_in_Version_0.2.0_with_CRD_ComputeNode.en.md8.jpeg)
+![img](https://shardingsphere.apache.org/blog/img/2023_04_13_Revamped_ShardingSphere_On_Cloud_What’s_New_in_Version_0.2.0_with_CRD_ComputeNode.en.md8.jpg)
 
 Now, a complete cluster managed by ShardingSphere Operator has been deployed.
 
@@ -71,7 +71,7 @@ READYINSTANCES represent the number of ShardingSphere Pods in the Ready state, P
 ```
 kubectl get computenode
 ```
-![img](https://shardingsphere.apache.org/blog/img/2023_04_13_Revamped_ShardingSphere_On_Cloud_What’s_New_in_Version_0.2.0_with_CRD_ComputeNode.en.md9.jpeg)
+![img](https://shardingsphere.apache.org/blog/img/2023_04_13_Revamped_ShardingSphere_On_Cloud_What’s_New_in_Version_0.2.0_with_CRD_ComputeNode.en.md9.jpg)
 
 **Quickly Scale the ShardingSphere Proxy Cluster Using** `kubectl scale`
 
@@ -79,9 +79,9 @@ ComputeNode supports the Scale subresource, which enables you to manually scale
 
 If the ComputeNode installed by the operator’s default charts cannot meet your usage scenario, you can write a ComputeNode yaml file and submit it to Kubernetes for deployment.
 
-![img](https://shardingsphere.apache.org/blog/img/2023_04_13_Revamped_ShardingSphere_On_Cloud_What’s_New_in_Version_0.2.0_with_CRD_ComputeNode.en.md10.jpeg)
+![img](https://shardingsphere.apache.org/blog/img/2023_04_13_Revamped_ShardingSphere_On_Cloud_What’s_New_in_Version_0.2.0_with_CRD_ComputeNode.en.md10.jpg)
 
-![img](https://shardingsphere.apache.org/blog/img/2023_04_13_Revamped_ShardingSphere_On_Cloud_What’s_New_in_Version_0.2.0_with_CRD_ComputeNode.en.md11.jpeg)
+![img](https://shardingsphere.apache.org/blog/img/2023_04_13_Revamped_ShardingSphere_On_Cloud_What’s_New_in_Version_0.2.0_with_CRD_ComputeNode.en.md11.jpg)
 
 **Customizing ComputeNode configuration**
 If the ComputeNode installed by the operator’s default charts cannot meet the usage scenario, you need to write a ComputeNode yaml file by yourself and submit it to Kubernetes for deployment:
@@ -138,9 +138,9 @@ Save the above configuration as foo.yml and execute the following command to cre
 kubectl apply -f foo.yml
 ```
 
-![img](https://shardingsphere.apache.org/blog/img/2023_04_13_Revamped_ShardingSphere_On_Cloud_What’s_New_in_Version_0.2.0_with_CRD_ComputeNode.en.md12.jpeg)
+![img](https://shardingsphere.apache.org/blog/img/2023_04_13_Revamped_ShardingSphere_On_Cloud_What’s_New_in_Version_0.2.0_with_CRD_ComputeNode.en.md12.jpg)
 
-![img](https://shardingsphere.apache.org/blog/img/2023_04_13_Revamped_ShardingSphere_On_Cloud_What’s_New_in_Version_0.2.0_with_CRD_ComputeNode.en.md13.jpeg)
+![img](https://shardingsphere.apache.org/blog/img/2023_04_13_Revamped_ShardingSphere_On_Cloud_What’s_New_in_Version_0.2.0_with_CRD_ComputeNode.en.md13.jpg)
 
 The above example can be directly found in our [Github repository](https://github.com/apache/shardingsphere-on-cloud/tree/main/examples/operator).
 
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/java-api/rules/encrypt.cn.md b/docs/document/content/user-manual/shardingsphere-jdbc/java-api/rules/encrypt.cn.md
index 2d61e5749bb..41e8ba484b8 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/java-api/rules/encrypt.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/java-api/rules/encrypt.cn.md
@@ -101,4 +101,4 @@ public final class EncryptDatabasesConfiguration {
 ## 相关参考
 
 - [数据加密的核心特性](/cn/features/sharding/ )
-- [数据加密的开发者指南](/cn/dev-manual/encryption/)
\ No newline at end of file
+- [数据加密的开发者指南](/cn/dev-manual/encrypt/)
\ No newline at end of file
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/java-api/rules/encrypt.en.md b/docs/document/content/user-manual/shardingsphere-jdbc/java-api/rules/encrypt.en.md
index 86482562acb..3e4d321efb5 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/java-api/rules/encrypt.en.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/java-api/rules/encrypt.en.md
@@ -101,4 +101,4 @@ public final class EncryptDatabasesConfiguration {
 ## Related References
 
 - [The feature description of Data Encryption](/en/features/encrypt/ )
-- [Dev Guide of Data Encryption](/en/dev-manual/encryption/)
+- [Dev Guide of Data Encryption](/en/dev-manual/encrypt/)
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/optional-plugins/_index.cn.md b/docs/document/content/user-manual/shardingsphere-jdbc/optional-plugins/_index.cn.md
index 6f9e57db570..2692f6e62c8 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/optional-plugins/_index.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/optional-plugins/_index.cn.md
@@ -4,7 +4,7 @@ weight = 6
 +++
 
 ShardingSphere 默认情况下仅包含核心 SPI 的实现，在 Git Source 存在一部分包含第三方依赖的 SPI
-实现的插件未包含在内。可在 https://central.sonatype.dev/ 进行检索。
+实现的插件未包含在内。可在 https://central.sonatype.com/ 进行检索。
 
 所有插件对应的 SPI 和 SPI 的已有实现类均可在 https://shardingsphere.apache.org/document/current/cn/dev-manual/ 检索。
 
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/optional-plugins/_index.en.md b/docs/document/content/user-manual/shardingsphere-jdbc/optional-plugins/_index.en.md
index 8cf30dda970..62a25da6d7d 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/optional-plugins/_index.en.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/optional-plugins/_index.en.md
@@ -4,7 +4,7 @@ weight = 6
 +++
 
 ShardingSphere only includes the implementation of the core SPI by default, and there is a part of the SPI that contains third-party dependencies in Git Source
-Implemented plugins are not included. Retrievable at https://central.sonatype.dev/.
+Implemented plugins are not included. Retrievable at https://central.sonatype.com/.
 
 SPI and existing implementation classes of SPI corresponding to all plugins can be retrieved at https://shardingsphere.apache.org/document/current/cn/dev-manual/.
 
diff --git a/docs/document/content/user-manual/shardingsphere-proxy/migration/usage.cn.md b/docs/document/content/user-manual/shardingsphere-proxy/migration/usage.cn.md
index 041a60bafe0..7e567ce75d0 100644
--- a/docs/document/content/user-manual/shardingsphere-proxy/migration/usage.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-proxy/migration/usage.cn.md
@@ -479,7 +479,7 @@ wal_sender_timeout = 0
 max_connections = 600
 ```
 
-详情请参见 [Write Ahead Log](https://opengauss.org/en/docs/2.0.1/docs/Developerguide/settings.html) 和 [Replication](https://opengauss.org/en/docs/2.0.1/docs/Developerguide/sending-server.html)。
+详情请参见 [Write Ahead Log](https://docs.opengauss.org/en/docs/2.0.1/docs/Developerguide/settings.html) 和 [Replication](https://docs.opengauss.org/en/docs/2.0.1/docs/Developerguide/sending-server.html)。
 
 2. 赋予源端 openGauss 账号 replication 权限。
 
@@ -488,7 +488,7 @@ max_connections = 600
 host replication repl_acct 0.0.0.0/0 md5
 ```
 
-详情请参见 [Configuring Client Access Authentication](https://opengauss.org/en/docs/2.0.1/docs/Developerguide/configuring-client-access-authentication.html) 和 [Example: Logic Replication Code](https://opengauss.org/en/docs/2.0.1/docs/Developerguide/example-logic-replication-code.html)。
+详情请参见 [Configuring Client Access Authentication](https://docs.opengauss.org/en/docs/2.0.1/docs/Developerguide/configuring-client-access-authentication.html) 和 [Example: Logic Replication Code](https://docs.opengauss.org/en/docs/2.0.1/docs/Developerguide/example-logic-replication-code.html)。
 
 3. 赋予 openGauss 账号 DDL DML 权限。
 
diff --git a/docs/document/content/user-manual/shardingsphere-proxy/migration/usage.en.md b/docs/document/content/user-manual/shardingsphere-proxy/migration/usage.en.md
index a534ee60cd4..26bdae8bb1d 100644
--- a/docs/document/content/user-manual/shardingsphere-proxy/migration/usage.en.md
+++ b/docs/document/content/user-manual/shardingsphere-proxy/migration/usage.en.md
@@ -477,7 +477,7 @@ wal_sender_timeout = 0
 max_connections = 600
 ```
 
-Please refer to [Write Ahead Log](https://opengauss.org/en/docs/2.0.1/docs/Developerguide/settings.html) and [Replication](https://opengauss.org/en/docs/2.0.1/docs/Developerguide/sending-server.html) for details.
+Please refer to [Write Ahead Log](https://docs.opengauss.org/en/docs/2.0.1/docs/Developerguide/settings.html) and [Replication](https://docs.opengauss.org/en/docs/2.0.1/docs/Developerguide/sending-server.html) for details.
 
 2. Grant replication permission for source openGauss account.
 
@@ -486,7 +486,7 @@ Please refer to [Write Ahead Log](https://opengauss.org/en/docs/2.0.1/docs/Devel
 host replication repl_acct 0.0.0.0/0 md5
 ```
 
-Please refer to [Configuring Client Access Authentication](https://opengauss.org/en/docs/2.0.1/docs/Developerguide/configuring-client-access-authentication.html) and [Example: Logic Replication Code](https://opengauss.org/en/docs/2.0.1/docs/Developerguide/example-logic-replication-code.html) for details.
+Please refer to [Configuring Client Access Authentication](https://docs.opengauss.org/en/docs/2.0.1/docs/Developerguide/configuring-client-access-authentication.html) and [Example: Logic Replication Code](https://docs.opengauss.org/en/docs/2.0.1/docs/Developerguide/example-logic-replication-code.html) for details.
 
 3. Grant DDL DML permissions for openGauss account.
 
