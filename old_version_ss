commit a848cb441ef117dc3669b878f40e534e68e952a8
Author: Liang Zhang <zhangliang@apache.org>
Date:   Sun Apr 2 16:28:25 2023 +0800

    Remove useless codes (#24951)

diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/java-api/rules/readwrite-splitting.cn.md b/docs/document/content/user-manual/shardingsphere-jdbc/java-api/rules/readwrite-splitting.cn.md
index 15a750ba63a..5e3ca275d73 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/java-api/rules/readwrite-splitting.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/java-api/rules/readwrite-splitting.cn.md
@@ -43,14 +43,6 @@ Java API 形式配置的读写分离可以方便的适用于各种场景，不
 | writeDataSourceName | String         | 写库数据源名称 |
 | readDataSourceNames | List\<String\> | 读库数据源列表 |
 
-类名称：org.apache.shardingsphere.readwritesplitting.api.strategy.DynamicReadwriteSplittingStrategyConfiguration
-
-可配置属性：
-
-| *名称*                            | *数据类型* | *说明*             | *默认值* |
-|---------------------------------|--------|------------------|-------|
-| autoAwareDataSourceName         | String | 数据库发现的逻辑数据源名称    | -     |
-
 算法类型的详情，请参见[内置负载均衡算法列表](/cn/user-manual/common-config/builtin-algorithm/load-balance)。
 查询一致性路由的详情，请参见[核心特性：读写分离](/cn/features/readwrite-splitting/)。
 
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/java-api/rules/readwrite-splitting.en.md b/docs/document/content/user-manual/shardingsphere-jdbc/java-api/rules/readwrite-splitting.en.md
index 931cdfeaaf1..2fc327dbfed 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/java-api/rules/readwrite-splitting.en.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/java-api/rules/readwrite-splitting.en.md
@@ -43,14 +43,6 @@ Configurable Properties:
 | writeDataSourceName | String         | Write data source name |
 | readDataSourceNames | List\<String\> | Read data sources list |
 
-Class name：org.apache.shardingsphere.readwritesplitting.api.strategy.DynamicReadwriteSplittingStrategyConfiguration
-
-Configurable Properties:
-
-| *Name*                          | *DataType* | *Description*                                                                                               | *Default Value* |
-|---------------------------------|------------|-------------------------------------------------------------------------------------------------------------|-----------------|
-| autoAwareDataSourceName         | String     | Database discovery logic data source name                                                                   | -               |
-
 Please refer to [Built-in Load Balance Algorithm List](/en/user-manual/common-config/builtin-algorithm/load-balance) for details on algorithm types.
 Please refer to [Read-write splitting-Core features](/en/features/readwrite-splitting/) for more details about query consistent routing.
 
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/rules/ha.cn.md b/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/rules/ha.cn.md
deleted file mode 100644
index ce7ced3b40c..00000000000
--- a/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/rules/ha.cn.md
+++ /dev/null
@@ -1,106 +0,0 @@
-+++
-title = "高可用"
-weight = 4
-+++
-
-## 背景信息
-
-通过 `YAML` 格式，ShardingSphere 会根据 YAML 配置，自动完成 `ShardingSphereDataSource` 对象的创建，减少用户不必要的编码工作。
-
-## 参数解释
-
-```yaml
-rules:
-- !READWRITE_SPLITTING
-  dataSources:
-    replica_ds:
-      dynamicStrategy: # 动态读写分离
-        autoAwareDataSourceName: # 高可用规则逻辑数据源名称
-
-- !DB_DISCOVERY
-  dataSources:
-    <data_source_name> (+): # 逻辑数据源名称
-      dataSourceNames: # 数据源名称列表
-        - <data_source>
-        - <data_source>
-      discoveryHeartbeatName: # 检测心跳名称
-      discoveryTypeName: # 数据库发现类型名称
-  
-  # 心跳检测配置
-  discoveryHeartbeats:
-    <discovery_heartbeat_name> (+): # 心跳名称
-      props:
-        keep-alive-cron: # cron 表达式，如：'0/5 * * * * ?'
-  
-  # 数据库发现类型配置
-  discoveryTypes:
-    <discovery_type_name> (+): # 数据库发现类型名称
-      type: # 数据库发现类型，如：MySQL.MGR，MySQL.NORMAL_REPLICATION，openGauss.NORMAL_REPLICATION 
-      props (?):
-        group-name: 92504d5b-6dec-11e8-91ea-246e9612aaf1 # 数据库发现类型必要参数，如 MGR 的 group-name
-```
-
-## 配置示例
-
-```yaml
-databaseName: database_discovery_db
-
-dataSources:
-  ds_0:
-    url: jdbc:mysql://127.0.0.1:33306/primary_demo_ds?serverTimezone=UTC&useSSL=false
-    username: root
-    password:
-    connectionTimeoutMilliseconds: 3000
-    idleTimeoutMilliseconds: 60000
-    maxLifetimeMilliseconds: 1800000
-    maxPoolSize: 50
-    minPoolSize: 1
-  ds_1:
-    url: jdbc:mysql://127.0.0.1:33307/primary_demo_ds?serverTimezone=UTC&useSSL=false
-    username: root
-    password:
-    connectionTimeoutMilliseconds: 3000
-    idleTimeoutMilliseconds: 60000
-    maxLifetimeMilliseconds: 1800000
-    maxPoolSize: 50
-    minPoolSize: 1
-  ds_2:
-    url: jdbc:mysql://127.0.0.1:33308/primary_demo_ds?serverTimezone=UTC&useSSL=false
-    username: root
-    password:
-    connectionTimeoutMilliseconds: 3000
-    idleTimeoutMilliseconds: 60000
-    maxLifetimeMilliseconds: 1800000
-    maxPoolSize: 50
-    minPoolSize: 1
-
-rules:
-- !READWRITE_SPLITTING
-  dataSources:
-    replica_ds:
-      dynamicStrategy:
-        autoAwareDataSourceName: readwrite_ds
-
-- !DB_DISCOVERY
-  dataSources:
-    readwrite_ds:
-      dataSourceNames:
-        - ds_0
-        - ds_1
-        - ds_2
-      discoveryHeartbeatName: mgr_heartbeat
-      discoveryTypeName: mgr
-  discoveryHeartbeats:
-    mgr_heartbeat:
-      props:
-        keep-alive-cron: '0/5 * * * * ?'
-  discoveryTypes:
-    mgr:
-      type: MySQL.MGR
-      props:
-        group-name: 558edd3c-02ec-11ea-9bb3-080027e39bd2
-```
-## 相关参考
-
-- [高可用核心特性](/cn/features/ha/)
-- [JAVA API：高可用配置](/cn/user-manual/shardingsphere-jdbc/java-api/rules/ha/)
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/rules/ha.en.md b/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/rules/ha.en.md
deleted file mode 100644
index ffe6bb2c233..00000000000
--- a/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/rules/ha.en.md
+++ /dev/null
@@ -1,105 +0,0 @@
-+++
-title = "HA"
-weight = 4
-+++
-
-## Background
-
-Through `YAML` format, ShardingSphere will automatically create the `ShardingSphereDataSource` object according to the YAML configuration, reducing unnecessary coding work for users.
-
-## Parameters
-
-```yaml
-rules:
-- !READWRITE_SPLITTING
-  dataSources:
-    replica_ds:
-      dynamicStrategy:
-        autoAwareDataSourceName: # High availability rule logical data source name
-
-- !DB_DISCOVERY
-  dataSources:
-    <data_source_name> (+): # Logic data source name
-      dataSourceNames: # Data source names
-        - <data_source>
-        - <data_source>
-      discoveryHeartbeatName: # Detect heartbeat name
-      discoveryTypeName: # Database discovery type name
-  
-  # Heartbeat Configuration
-  discoveryHeartbeats:
-    <discovery_heartbeat_name> (+): # heartbeat name
-      props:
-        keep-alive-cron: # This is cron expression, such as：'0/5 * * * * ?'
-  
-  # Database Discovery Configuration
-  discoveryTypes:
-    <discovery_type_name> (+): # Database discovery type name
-      type: # Database discovery type, such as: MySQL.MGR, MySQL.NORMAL_REPLICATION, openGauss.NORMAL_REPLICATION
-      props (?):
-        group-name: 92504d5b-6dec-11e8-91ea-246e9612aaf1 # Required parameters for database discovery types, such as MGR's group-name
-```
-
-## Sample
-
-```yaml
-databaseName: database_discovery_db
-
-dataSources:
-  ds_0:
-    url: jdbc:mysql://127.0.0.1:33306/primary_demo_ds?serverTimezone=UTC&useSSL=false
-    username: root
-    password:
-    connectionTimeoutMilliseconds: 3000
-    idleTimeoutMilliseconds: 60000
-    maxLifetimeMilliseconds: 1800000
-    maxPoolSize: 50
-    minPoolSize: 1
-  ds_1:
-    url: jdbc:mysql://127.0.0.1:33307/primary_demo_ds?serverTimezone=UTC&useSSL=false
-    username: root
-    password:
-    connectionTimeoutMilliseconds: 3000
-    idleTimeoutMilliseconds: 60000
-    maxLifetimeMilliseconds: 1800000
-    maxPoolSize: 50
-    minPoolSize: 1
-  ds_2:
-    url: jdbc:mysql://127.0.0.1:33308/primary_demo_ds?serverTimezone=UTC&useSSL=false
-    username: root
-    password:
-    connectionTimeoutMilliseconds: 3000
-    idleTimeoutMilliseconds: 60000
-    maxLifetimeMilliseconds: 1800000
-    maxPoolSize: 50
-    minPoolSize: 1
-
-rules:
-- !READWRITE_SPLITTING
-  dataSources:
-    replica_ds:
-      dynamicStrategy:
-        autoAwareDataSourceName: readwrite_ds
-- !DB_DISCOVERY
-  dataSources:
-    readwrite_ds:
-      dataSourceNames:
-        - ds_0
-        - ds_1
-        - ds_2
-      discoveryHeartbeatName: mgr_heartbeat
-      discoveryTypeName: mgr
-  discoveryHeartbeats:
-    mgr_heartbeat:
-      props:
-        keep-alive-cron: '0/5 * * * * ?'
-  discoveryTypes:
-    mgr:
-      type: MySQL.MGR
-      props:
-        group-name: 558edd3c-02ec-11ea-9bb3-080027e39bd2
-```
-## Related References
-
-- [Feature Description of HA](/en/features/ha/)
-- [JAVA API: HA](/en/user-manual/shardingsphere-jdbc/java-api/rules/ha/)
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/rules/mix.cn.md b/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/rules/mix.cn.md
index e8021befc03..f84d132aaea 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/rules/mix.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/rules/mix.cn.md
@@ -5,7 +5,7 @@ weight = 9
 
 ## 背景信息
 
-ShardingSphere 涵盖了很多功能，例如，分库分片、读写分离、高可用、数据加密等。这些功能用户可以单独进行使用，也可以配合一起使用，下面是基于 YAML 的参数解释和配置示例。
+ShardingSphere 涵盖了很多功能，例如，分库分片、读写分离、数据加密等。这些功能用户可以单独进行使用，也可以配合一起使用，下面是基于 YAML 的参数解释和配置示例。
 
 ## 参数解释
 
@@ -39,39 +39,6 @@ rules:
     <key_generate_algorithm_name> (+): # 分布式序列算法名称
       type: # 分布式序列算法类型
       props: # 分布式序列算法属性配置
-- !READWRITE_SPLITTING
-  dataSources:
-    <data_source_name>: # 读写分离逻辑数据源名称
-      dynamicStrategy: # 读写分离类型
-        autoAwareDataSourceName: # 数据库发现逻辑数据源名称
-    <data_source_name>: # 读写分离逻辑数据源名称
-      dynamicStrategy: # 读写分离类型
-        autoAwareDataSourceName: # 数据库发现逻辑数据源名称
-- !DB_DISCOVERY
-  dataSources:
-    <data_source_name>:
-      dataSourceNames: # 数据源名称列表
-        - ds_0
-        - ds_1
-        - ds_2
-      discoveryHeartbeatName: # 检测心跳名称
-      discoveryTypeName: # 数据库发现类型名称
-    <data_source_name>:
-      dataSourceNames: # 数据源名称列表
-        - ds_3
-        - ds_4
-        - ds_5
-      discoveryHeartbeatName: # 检测心跳名称
-      discoveryTypeName: # 数据库发现类型名称
-  discoveryHeartbeats:
-    <discovery_heartbeat_name>: # 心跳名称
-      props:
-        keep-alive-cron: # cron 表达式，如：'0/5 * * * * ?'
-  discoveryTypes:
-    <discovery_type_name>: # 数据库发现类型名称
-      type: # 数据库发现类型，如：MySQL.MGR 
-      props:
-        group-name:  # 数据库发现类型必要参数，如 MGR 的 group-name
 - !ENCRYPT
   encryptors:
     <encrypt_algorithm_name> (+): # 加解密算法名称
@@ -128,39 +95,6 @@ rules:
   keyGenerators:
     snowflake:
       type: SNOWFLAKE
-- !READWRITE_SPLITTING
-  dataSources:
-    replica_ds_0:
-      dynamicStrategy:
-        autoAwareDataSourceName: readwrite_ds_0
-    replica_ds_1:
-      dynamicStrategy:
-        autoAwareDataSourceName: readwrite_ds_1
-- !DB_DISCOVERY
-  dataSources:
-    readwrite_ds_0:
-      dataSourceNames:
-        - ds_0
-        - ds_1
-        - ds_2
-      discoveryHeartbeatName: mgr_heartbeat
-      discoveryTypeName: mgr
-    readwrite_ds_1:
-      dataSourceNames:
-        - ds_3
-        - ds_4
-        - ds_5
-      discoveryHeartbeatName: mgr_heartbeat
-      discoveryTypeName: mgr
-  discoveryHeartbeats:
-    mgr_heartbeat:
-      props:
-        keep-alive-cron: '0/5 * * * * ?'
-  discoveryTypes:
-    mgr:
-      type: MySQL.MGR
-      props:
-        group-name: 558edd3c-02ec-11ea-9bb3-080027e39bd2
 - !ENCRYPT
   encryptors:
     aes_encryptor:
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/rules/mix.en.md b/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/rules/mix.en.md
index a05699fab3d..3c34d0da45c 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/rules/mix.en.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/rules/mix.en.md
@@ -5,7 +5,7 @@ weight = 9
 
 ## Background
 
-ShardingSphere provides a variety of features, such as data sharding, read/write splitting, high availability, and data encryption. These features can be used independently or in combination. 
+ShardingSphere provides a variety of features, such as data sharding, read/write splitting, and data encryption. These features can be used independently or in combination. 
 Below, you will find the parameters' explanation and configuration samples based on YAML.
 
 ## Parameters
@@ -40,39 +40,6 @@ rules:
     <key_generate_algorithm_name> (+): # Distributed sequence algorithm name
       type: # Distributed sequence algorithm type
       props: # Property configuration of distributed sequence algorithm
-- !READWRITE_SPLITTING
-  dataSources:
-    <data_source_name>: # Read/write splitting logical data source name
-      dynamicStrategy: # Read/write splitting type
-        autoAwareDataSourceName: # Database discovery logical data source name
-    <data_source_name>: # Read/write splitting logical data source name
-      dynamicStrategy: # Read/write splitting type
-        autoAwareDataSourceName: # Database discovery logical data source name
-- !DB_DISCOVERY
-  dataSources:
-    <data_source_name>:
-      dataSourceNames: # Data source name list
-        - ds_0
-        - ds_1
-        - ds_2
-      discoveryHeartbeatName: # Detect heartbeat name
-      discoveryTypeName: # Database discovery type name
-    <data_source_name>:
-      dataSourceNames: # Data source name list
-        - ds_3
-        - ds_4
-        - ds_5
-      discoveryHeartbeatName: # Detect heartbeat name
-      discoveryTypeName: # Database discovery type name
-  discoveryHeartbeats:
-    <discovery_heartbeat_name>: # Heartbeat name
-      props:
-        keep-alive-cron: # cron expression, such as '0/5 * * * * ?'
-  discoveryTypes:
-    <discovery_type_name>: # Database discovery type name
-      type: # Database discovery type, such as MySQL.MGR. 
-      props:
-        group-name:  # Required parameter of database discovery type, such as MGR's group-name.
 - !ENCRYPT
   encryptors:
     <encrypt_algorithm_name> (+): # Encryption and decryption algorithm name
@@ -129,39 +96,6 @@ rules:
   keyGenerators:
     snowflake:
       type: SNOWFLAKE
-- !READWRITE_SPLITTING
-  dataSources:
-    replica_ds_0:
-      dynamicStrategy:
-        autoAwareDataSourceName: readwrite_ds_0
-    replica_ds_1:
-      dynamicStrategy:
-        autoAwareDataSourceName: readwrite_ds_1
-- !DB_DISCOVERY
-  dataSources:
-    readwrite_ds_0:
-      dataSourceNames:
-        - ds_0
-        - ds_1
-        - ds_2
-      discoveryHeartbeatName: mgr_heartbeat
-      discoveryTypeName: mgr
-    readwrite_ds_1:
-      dataSourceNames:
-        - ds_3
-        - ds_4
-        - ds_5
-      discoveryHeartbeatName: mgr_heartbeat
-      discoveryTypeName: mgr
-  discoveryHeartbeats:
-    mgr_heartbeat:
-      props:
-        keep-alive-cron: '0/5 * * * * ?'
-  discoveryTypes:
-    mgr:
-      type: MySQL.MGR
-      props:
-        group-name: 558edd3c-02ec-11ea-9bb3-080027e39bd2
 - !ENCRYPT
   encryptors:
     aes_encryptor:
