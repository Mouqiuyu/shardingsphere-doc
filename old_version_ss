commit 96f9c14f2d093ffb75a6980ff35eda77b53a0e98
Author: ChenJiaHao <Pace2Car@163.com>
Date:   Fri May 26 15:32:59 2023 +0800

    Update JDBC global rule document & examples & test configuration (#25888)
    
    * Update global rule in examples
    
    * Update JDBC global rule document
    
    * Update JDBC global rule configuration in test
    
    * Roll back test configurations that should not be modified
    
    * Fix transaction document
    
    * Fix transaction test configuration

diff --git a/docs/document/content/reference/management/_index.cn.md b/docs/document/content/reference/management/_index.cn.md
index 37d430aa309..bad38e22337 100644
--- a/docs/document/content/reference/management/_index.cn.md
+++ b/docs/document/content/reference/management/_index.cn.md
@@ -71,10 +71,10 @@ namespace
 全局规则配置，可包含事务配置、SQL 解析配置等。
 
 ```yaml
-- !TRANSACTION
+transaction:
   defaultType: XA
   providerType: Atomikos
-- !SQL_PARSER
+sqlParser:
   sqlCommentParseEnabled: true
 ```
 
diff --git a/docs/document/content/reference/management/_index.en.md b/docs/document/content/reference/management/_index.en.md
index a9c1e8ddb2b..cff6afd4547 100644
--- a/docs/document/content/reference/management/_index.en.md
+++ b/docs/document/content/reference/management/_index.en.md
@@ -71,10 +71,10 @@ namespace
 These are the global rule configurations, which can include transaction configuration, SQL parser configuration, etc.
 
 ```yaml
-- !TRANSACTION
+transaction:
   defaultType: XA
   providerType: Atomikos
-- !SQL_PARSER
+sqlParser:
   sqlCommentParseEnabled: true
 ```
 
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/special-api/transaction/atomikos.cn.md b/docs/document/content/user-manual/shardingsphere-jdbc/special-api/transaction/atomikos.cn.md
index eccbe87398c..864096abaf6 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/special-api/transaction/atomikos.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/special-api/transaction/atomikos.cn.md
@@ -18,7 +18,7 @@ Apache ShardingSphere 提供 XA 事务，默认的 XA 事务实现为 Atomikos
 Yaml:
 
 ```yaml
-- !TRANSACTION
+transaction:
   defaultType: XA
   providerType: Atomikos 
 ```
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/special-api/transaction/atomikos.en.md b/docs/document/content/user-manual/shardingsphere-jdbc/special-api/transaction/atomikos.en.md
index 23172f99a1b..95e9f10e125 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/special-api/transaction/atomikos.en.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/special-api/transaction/atomikos.en.md
@@ -19,7 +19,7 @@ Apache ShardingSphere provides XA transactions, and the default XA transaction m
 Yaml:
 
 ```yaml
-- !TRANSACTION
+transaction:
   defaultType: XA
   providerType: Atomikos 
 ```
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/special-api/transaction/bitronix.cn.md b/docs/document/content/user-manual/shardingsphere-jdbc/special-api/transaction/bitronix.cn.md
index e627274bafe..f5e02696b62 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/special-api/transaction/bitronix.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/special-api/transaction/bitronix.cn.md
@@ -54,7 +54,7 @@ Apache ShardingSphere 提供 XA 事务，集成了 Bitronix 的实现。
 Yaml:
 
 ```yaml
-- !TRANSACTION
+transaction:
   defaultType: XA
   providerType: Bitronix
 ```
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/special-api/transaction/bitronix.en.md b/docs/document/content/user-manual/shardingsphere-jdbc/special-api/transaction/bitronix.en.md
index bd01ba21d4a..e54d2e1eef7 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/special-api/transaction/bitronix.en.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/special-api/transaction/bitronix.en.md
@@ -54,7 +54,7 @@ Introducing Maven dependency
 Yaml:
 
 ```yaml
-- !TRANSACTION
+transaction:
   defaultType: XA
   providerType: Bitronix
 ```
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/special-api/transaction/narayana.cn.md b/docs/document/content/user-manual/shardingsphere-jdbc/special-api/transaction/narayana.cn.md
index 29aa3cf55e3..04163784ad5 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/special-api/transaction/narayana.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/special-api/transaction/narayana.cn.md
@@ -75,7 +75,7 @@ Apache ShardingSphere 提供 XA 事务，集成了 Narayana 的实现。
 Yaml:
 
 ```yaml
-- !TRANSACTION
+transaction:
   defaultType: XA
   providerType: Narayana
 ```
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/special-api/transaction/narayana.en.md b/docs/document/content/user-manual/shardingsphere-jdbc/special-api/transaction/narayana.en.md
index 7b951228bc3..320ad53160f 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/special-api/transaction/narayana.en.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/special-api/transaction/narayana.en.md
@@ -74,7 +74,7 @@ See [Narayana's Official Documentation](https://narayana.io/documentation/index.
 Yaml:
 
 ```yaml
-- !TRANSACTION
+transaction:
   defaultType: XA
   providerType: Narayana
 ```
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/rules/sql-parser.cn.md b/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/rules/sql-parser.cn.md
index e100c3c36c4..5f5cc131874 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/rules/sql-parser.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/rules/sql-parser.cn.md
@@ -9,8 +9,7 @@ SQL 解析 YAML 配置方式具有可读性高，使用简单的特点。通过
 ## 参数解释
 
 ```yaml
-rules:
-- !SQL_PARSER
+sqlParser:
   sqlCommentParseEnabled: # 是否解析 SQL 注释
   sqlStatementCache: # SQL 语句本地缓存配置项
     initialCapacity: # 本地缓存初始容量
@@ -28,15 +27,14 @@ rules:
 
 ## 配置示例
 ```yaml
-rules:
-  - !SQL_PARSER
-    sqlCommentParseEnabled: true
-    sqlStatementCache:
-      initialCapacity: 2000
-      maximumSize: 65535
-    parseTreeCache:
-      initialCapacity: 128
-      maximumSize: 1024
+sqlParser:
+  sqlCommentParseEnabled: true
+  sqlStatementCache:
+    initialCapacity: 2000
+    maximumSize: 65535
+  parseTreeCache:
+    initialCapacity: 128
+    maximumSize: 1024
 ```
 
 ## 相关参考
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/rules/sql-parser.en.md b/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/rules/sql-parser.en.md
index fd0ac07a273..e26601cf7c6 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/rules/sql-parser.en.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/rules/sql-parser.en.md
@@ -10,8 +10,7 @@ The SQL parser YAML configuration is readable and easy to use. The YAML files al
 ## Parameters
 
 ```yaml
-rules:
-- !SQL_PARSER
+sqlParser:
   sqlCommentParseEnabled: # Whether to parse SQL comments 
   sqlStatementCache: # SQL statement local cache
     initialCapacity: # Initial capacity of local cache
@@ -28,15 +27,14 @@ rules:
    
 ## Sample
 ```yaml
-rules:
-  - !SQL_PARSER
-    sqlCommentParseEnabled: true
-    sqlStatementCache:
-      initialCapacity: 2000
-      maximumSize: 65535
-    parseTreeCache:
-      initialCapacity: 128
-      maximumSize: 1024
+sqlParser:
+  sqlCommentParseEnabled: true
+  sqlStatementCache:
+    initialCapacity: 2000
+    maximumSize: 65535
+  parseTreeCache:
+    initialCapacity: 128
+    maximumSize: 1024
 ```
 
 ## Related References
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/rules/sql-translator.cn.md b/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/rules/sql-translator.cn.md
index 9afe31c7d75..a6e1cb60c83 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/rules/sql-translator.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/rules/sql-translator.cn.md
@@ -6,8 +6,7 @@ weight = 8
 ## 配置项说明
 
 ```yaml
-rules:
-- !SQL_TRANSLATOR
+sqlTranslator:
   type: # SQL 翻译器类型
   useOriginalSQLWhenTranslatingFailed: # SQL 翻译失败是否使用原始 SQL 继续执行
 ```
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/rules/sql-translator.en.md b/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/rules/sql-translator.en.md
index e44eb36715d..a18be947049 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/rules/sql-translator.en.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/rules/sql-translator.en.md
@@ -6,8 +6,7 @@ weight = 8
 ## Configuration Item Explanation
 
 ```yaml
-rules:
-- !SQL_TRANSLATOR
+sqlTranslator:
   type: # SQL translator type
   useOriginalSQLWhenTranslatingFailed: # Whether use original SQL when translating failed
 ```
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/rules/transaction.cn.md b/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/rules/transaction.cn.md
index 1f0273f5e30..28e5d1307da 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/rules/transaction.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/rules/transaction.cn.md
@@ -10,10 +10,9 @@ ShardingSphere 提供了三种模式的分布式事务 `LOCAL`, `XA`, `BASE`。
 ## 参数解释
 
 ```yaml
-rules:
-  - !TRANSACTION
-    defaultType: # 事务模式，可选值 LOCAL/XA/BASE
-    providerType: # 指定模式下的具体实现
+transaction:
+  defaultType: # 事务模式，可选值 LOCAL/XA/BASE
+  providerType: # 指定模式下的具体实现
 ```
 
 ## 操作步骤
@@ -23,9 +22,8 @@ rules:
 server.yaml 配置文件内容如下：
 
 ```yaml
-rules:
-  - !TRANSACTION
-    defaultType: LOCAL
+transaction:
+  defaultType: LOCAL
 ```
 
 ### 使用 XA 模式
@@ -33,10 +31,9 @@ rules:
 server.yaml 配置文件内容如下：
 
 ```yaml
-rules:
-  - !TRANSACTION
-    defaultType: XA
-    providerType: Narayana/Atomikos 
+transaction:
+  defaultType: XA
+  providerType: Narayana/Atomikos 
 ```
 手动添加 Narayana 相关依赖：
 
@@ -57,10 +54,9 @@ shardingsphere-transaction-xa-narayana-x.x.x-SNAPSHOT.jar
 server.yaml 配置文件内容如下：
 
 ```yaml
-rules:
-  - !TRANSACTION
-    defaultType: BASE
-    providerType: Seata 
+transaction:
+  defaultType: BASE
+  providerType: Seata 
 ```
 
 搭建 Seata Server，添加相关配置文件，和 Seata 依赖，具体步骤参考 [ShardingSphere 集成 Seata 柔性事务](https://community.sphere-ex.com/t/topic/404)
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/rules/transaction.en.md b/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/rules/transaction.en.md
index 27c760cb399..69f2c6a9baa 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/rules/transaction.en.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/yaml-config/rules/transaction.en.md
@@ -10,10 +10,9 @@ ShardingSphere provides three modes for distributed transactions `LOCAL`, `XA`,
 ## Parameters
 
 ```yaml
-rules:
-  - !TRANSACTION
-    defaultType: # Transaction mode, optional value LOCAL/XA/BASE
-    providerType: # Specific implementation of the mode
+transaction:
+  defaultType: # Transaction mode, optional value LOCAL/XA/BASE
+  providerType: # Specific implementation of the mode
 ```
 
 ## Procedure
@@ -23,9 +22,8 @@ rules:
 The content of the server.yaml configuration file is as follows:
 
 ```yaml
-rules:
-  - !TRANSACTION
-    defaultType: LOCAL
+transaction:
+  defaultType: LOCAL
 ```
 
 ### Use XA Mode
@@ -33,10 +31,9 @@ rules:
 The content of the server.yaml configuration file is as follows:
 
 ```yaml
-rules:
-  - !TRANSACTION
-    defaultType: XA
-    providerType: Narayana/Atomikos 
+transaction:
+  defaultType: XA
+  providerType: Narayana/Atomikos 
 ```
 To manually add Narayana-related dependencies:
 
@@ -57,10 +54,9 @@ shardingsphere-transaction-xa-narayana-x.x.x-SNAPSHOT.jar
 The content of the server.yaml configuration file is as follows:
 
 ```yaml
-rules:
-  - !TRANSACTION
-    defaultType: BASE
-    providerType: Seata 
+transaction:
+  defaultType: BASE
+  providerType: Seata 
 ```
 
 Build a Seata Server, add relevant configuration files and Seata dependencies, see [ShardingSphere Integrates Seata Flexible Transactions](https://community.sphere-ex.com/t/topic/404)
\ No newline at end of file
