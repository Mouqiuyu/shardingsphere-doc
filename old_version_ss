commit 9cdd92fa7cf7437f096c33187bda01cadc3e1479
Author: Liang Zhang <zhangliang@apache.org>
Date:   Sat Feb 25 13:53:55 2023 +0800

    Use Collections.singletonMap to instead of single element's map creation (#24347)

diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/java-api/algorithm.cn.md b/docs/document/content/user-manual/shardingsphere-jdbc/java-api/algorithm.cn.md
index 3a517d58715..d8bd8659bc9 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/java-api/algorithm.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/java-api/algorithm.cn.md
@@ -18,7 +18,7 @@ ruleConfiguration.getShardingAlgorithms().put("algorithmName", new AlgorithmConf
 ```java
 // encryptorName 由用户指定，需要和加密规则中的 encryptorName 属性一致
 // type 和 props，请参考加密内置算法：https://shardingsphere.apache.org/document/current/cn/user-manual/common-config/builtin-algorithm/encrypt/
-Map<String, AlgorithmConfiguration> algorithmConfigs = new LinkedHashMap<>(1, 1);
+Map<String, AlgorithmConfiguration> algorithmConfigs = new HashMap<>();
 algorithmConfigs.put("encryptorName", new AlgorithmConfiguration("xxx", new Properties()));
 ```
 
@@ -27,7 +27,7 @@ algorithmConfigs.put("encryptorName", new AlgorithmConfiguration("xxx", new Prop
 ```java
 // loadBalancerName 由用户指定，需要和读写分离规则中的 loadBalancerName 属性一致
 // type 和 props，请参考读写分离负载均衡内置算法：https://shardingsphere.apache.org/document/current/cn/user-manual/common-config/builtin-algorithm/load-balance/      
-Map<String, AlgorithmConfiguration> algorithmConfigs = new HashMap<>(1, 1);
+Map<String, AlgorithmConfiguration> algorithmConfigs = new HashMap<>();
 algorithmConfigs.put("loadBalancerName", new AlgorithmConfiguration("xxx", new Properties()));
 ```
 
@@ -36,7 +36,7 @@ algorithmConfigs.put("loadBalancerName", new AlgorithmConfiguration("xxx", new P
 ```java
 // shadowAlgorithmName 由用户指定，需要和影子库规则中的 shadowAlgorithmNames 属性一致
 // type 和 props，请参考影子库内置算法：https://shardingsphere.apache.org/document/current/cn/user-manual/common-config/builtin-algorithm/shadow/      
-Map<String, AlgorithmConfiguration> algorithmConfigs = new HashMap<>(1, 1);
+Map<String, AlgorithmConfiguration> algorithmConfigs = new HashMap<>();
 algorithmConfigs.put("shadowAlgorithmName", new AlgorithmConfiguration("xxx", new Properties()));
 ```
 
@@ -44,7 +44,7 @@ algorithmConfigs.put("shadowAlgorithmName", new AlgorithmConfiguration("xxx", ne
 
 ```java
 // discoveryTypeName 由用户指定，需要和数据库发现规则中的 discoveryTypeName 属性一致
-Map<String, AlgorithmConfiguration> algorithmConfigs = new HashMap<>(1, 1);
+Map<String, AlgorithmConfiguration> algorithmConfigs = new HashMap<>();
 algorithmConfigs.put("discoveryTypeName", new AlgorithmConfiguration("xxx", new Properties()));
 ```
 
@@ -53,6 +53,6 @@ algorithmConfigs.put("discoveryTypeName", new AlgorithmConfiguration("xxx", new
 ```java
 // maskAlgorithmName 由用户指定，需要和脱敏规则中的 maskAlgorithm 属性一致
 // type 和 props，请参考脱敏内置算法：https://shardingsphere.apache.org/document/current/cn/user-manual/common-config/builtin-algorithm/mask/
-Map<String, AlgorithmConfiguration> algorithmConfigs = new LinkedHashMap<>(1, 1);
+Map<String, AlgorithmConfiguration> algorithmConfigs = new HashMap<>();
 algorithmConfigs.put("maskAlgorithmName", new AlgorithmConfiguration("xxx", new Properties()));
 ```
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/java-api/algorithm.en.md b/docs/document/content/user-manual/shardingsphere-jdbc/java-api/algorithm.en.md
index fc5b2eaf01b..ff2770f35e3 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/java-api/algorithm.en.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/java-api/algorithm.en.md
@@ -18,7 +18,7 @@ ruleConfiguration.getShardingAlgorithms().put("algorithmName", new AlgorithmConf
 ```java
 // encryptorName is specified by users, and its property should be consistent with that of encryptorName in encryption rules.
 // type and props, please refer to the built-in encryption algorithm: https://shardingsphere.apache.org/document/current/en/user-manual/common-config/builtin-algorithm/encrypt/
-Map<String, AlgorithmConfiguration> algorithmConfigs = new LinkedHashMap<>(1, 1);
+Map<String, AlgorithmConfiguration> algorithmConfigs = new HashMap<>();
 algorithmConfigs.put("encryptorName", new AlgorithmConfiguration("xxx", new Properties()));
 ```
 
@@ -27,7 +27,7 @@ algorithmConfigs.put("encryptorName", new AlgorithmConfiguration("xxx", new Prop
 ```java
 // loadBalancerName is specified by users, and its property has to be consistent with that of loadBalancerName in read/write splitting rules.
 // type and props, please refer to the built-in read/write splitting algorithm load balancer: https://shardingsphere.apache.org/document/current/en/user-manual/common-config/builtin-algorithm/load-balance/      
-Map<String, AlgorithmConfiguration> algorithmConfigs = new HashMap<>(1, 1);
+Map<String, AlgorithmConfiguration> algorithmConfigs = new HashMap<>();
 algorithmConfigs.put("loadBalancerName", new AlgorithmConfiguration("xxx", new Properties()));
 ```
 
@@ -36,7 +36,7 @@ algorithmConfigs.put("loadBalancerName", new AlgorithmConfiguration("xxx", new P
 ```java
 // shadowAlgorithmName is specified by users, and its property has to be consistent with that of shadowAlgorithmNames in shadow DB rules.
 // type and props, please refer to the built-in shadow DB algorithm: https://shardingsphere.apache.org/document/current/en/user-manual/common-config/builtin-algorithm/shadow/      
-Map<String, AlgorithmConfiguration> algorithmConfigs = new HashMap<>(1, 1);
+Map<String, AlgorithmConfiguration> algorithmConfigs = new HashMap<>();
 algorithmConfigs.put("shadowAlgorithmName", new AlgorithmConfiguration("xxx", new Properties()));
 ```
 
@@ -44,7 +44,7 @@ algorithmConfigs.put("shadowAlgorithmName", new AlgorithmConfiguration("xxx", ne
 
 ```
 // discoveryTypeName is specified by users, and its property has to be consistent with that of discoveryTypeName in database discovery rules.
-Map<String, AlgorithmConfiguration> algorithmConfigs = new HashMap<>(1, 1);
+Map<String, AlgorithmConfiguration> algorithmConfigs = new HashMap<>();
 algorithmConfigs.put("discoveryTypeName", new AlgorithmConfiguration("xxx", new Properties()));
 ```
 
@@ -53,6 +53,6 @@ algorithmConfigs.put("discoveryTypeName", new AlgorithmConfiguration("xxx", new
 ```java
 // maskAlgorithmName is specified by users, and its property should be consistent with that of maskAlgorithm in mask rules.
 // type and props, please refer to the built-in mask algorithm: https://shardingsphere.apache.org/document/current/en/user-manual/common-config/builtin-algorithm/mask/
-Map<String, AlgorithmConfiguration> algorithmConfigs = new LinkedHashMap<>(1, 1);
+Map<String, AlgorithmConfiguration> algorithmConfigs = new HashMap<>();
 algorithmConfigs.put("maskAlgorithmName", new AlgorithmConfiguration("xxx", new Properties()));
 ```
