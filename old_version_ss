commit ae9f4f003b875a5f54b9eccfd6b27cd24cea96d2
Author: Raigor <raigor.jiang@gmail.com>
Date:   Wed Mar 15 16:34:46 2023 +0800

    Update authority and props docs for Proxy. (#24611)

diff --git a/docs/document/content/user-manual/shardingsphere-proxy/yaml-config/authentication.cn.md b/docs/document/content/user-manual/shardingsphere-proxy/yaml-config/authentication.cn.md
deleted file mode 100644
index 307f860729e..00000000000
--- a/docs/document/content/user-manual/shardingsphere-proxy/yaml-config/authentication.cn.md
+++ /dev/null
@@ -1,73 +0,0 @@
-+++
-title = "权限"
-weight = 1
-+++
-
-权限配置用于设置能够连接到 ShardingSphere-Proxy 的用户，并可以为他们授予不同的权限。
-
-## 背景信息
-
-在 ShardingSphere-Proxy 中，通过 `authority` 来配置用户和授权信息。
-
-得益于 ShardingSphere 的可插拔架构，Proxy 提供了两种级别的权限提供者，分别是：
-
-- `ALL_PERMITTED`：授予所有权限，不鉴权；
-- `DATABASE_PERMITTED`：为用户授予指定逻辑库的权限，通过 user-database-mappings 进行映射。
-
-在配置 `authority` 时，管理员可根据需要选择使用哪一种权限提供者。
-
-## 参数解释
-
-```yaml
-authority:
-  users:
-    - user: # 用于登录计算节点的用户名和授权主机的组合，格式：<username>@<hostname>，hostname 为 % 或空字符串表示不限制授权主机
-      password: # 用户密码
-  privilege:
-    type: # 权限提供者类型，缺省值为 ALL_PERMITTED
-```
-
-## 配置示例
-
-### ALL_PERMITTED
-
-```yaml
-authority:
-  users:
-    - user: root@localhost
-      password: root
-    - user: my_user
-      password: pwd
-  privilege:
-    type: ALL_PERMITTED
-```
-
-以上配置表示：
-- 用户 `root`，仅可从 `localhost` 连接 Proxy，密码为 `root`；
-- 用户 `my_user`，可以从任意主机连接 Proxy，密码为 `pwd`；
-- `privilege` 类型为 `ALL_PERMITTED`，表示对用户授予所有权限，不鉴权。
-
-### DATABASE_PERMITTED
-
-```yaml
-authority:
-  users:
-    - user: root@localhost
-      password: root
-    - user: my_user
-      password: pwd
-  privilege:
-    type: DATABASE_PERMITTED
-    props:
-      user-database-mappings: root@localhost=sharding_db, root@localhost=test_db, my_user@=sharding_db
-```
-
-以上配置表示：
-
-- `privilege` 类型为 `DATABASE_PERMITTED`，表示对用户授予库级别权限，需要配置；
-- 用户 `root` 仅可从 `localhost` 主机连接，可访问 `sharding_db` 和 `test_db`；
-- 用户 `my_user` 可从任意主机连接，可访问 `sharding_db`。
-
-## 相关参考
-
-权限提供者具体实现可以参考 [权限提供者](/cn/dev-manual/proxy)。
diff --git a/docs/document/content/user-manual/shardingsphere-proxy/yaml-config/authentication.en.md b/docs/document/content/user-manual/shardingsphere-proxy/yaml-config/authentication.en.md
deleted file mode 100644
index 6c3947d0a88..00000000000
--- a/docs/document/content/user-manual/shardingsphere-proxy/yaml-config/authentication.en.md
+++ /dev/null
@@ -1,70 +0,0 @@
-+++
-title = "Authorization"
-weight = 1
-+++
-
-Authorization configuration provided for users who can connect to ShardingSphere-Proxy. Users can be granted different authorities.
-
-## Background
-
-ShardingSphere-Proxy uses `authority` to configure user and authorization information.
-
-Thanks to ShardingSphere's pluggable architecture, Proxy provides two levels of privilege providers, namely: 
-
-- `ALL_PERMITTED`: grant all authorities by default without authentication.
-- `DATABASE_PERMITTED`: grant users the authority to specify a logical database, mapped through `user-database-mappings`.
-
-The administrator can choose which privilege provider to use as needed when configuring `authority`. 
-
-## Parameter
-
-```yaml
-authority:
-  users:
-    - user: # Specify the username, and authorized host for logging in to the compute node. Format: <username>@<hostname>. When the hostname is % or an empty string, it indicates that the authorized host is not limited.
-      password: # Password
-  privilege:
-    type: # Privilege provider type. The default value is ALL_PERMITTED.
-```
-
-## Sample
-
-### ALL_PERMITTED
-```yaml
-authority:
-  users:
-    - user: root@localhost
-      password: root
-    - user: my_user
-      password: pwd
-  privilege:
-    type: ALL_PERMITTED
-```
-
-The above configuration indicates: 
-- The user `root` can connect to Proxy only through `localhost`, and the password is `root`.
-- The user `my_user` can connect to Proxy through any host, and the password is `pwd`.
-- The `privilege` type is `ALL_PERMITTED`, which indicates that users are granted all authorities by default without authentication.
-
-### DATABASE_PERMITTED
-```yaml
-authority:
-  users:
-    - user: root@localhost
-      password: root
-    - user: my_user
-      password: pwd
-  privilege:
-    type: DATABASE_PERMITTED
-    props:
-      user-database-mappings: root@localhost=sharding_db, root@localhost=test_db, my_user@=sharding_db
-```
-
-The above configuration indicates: 
-- The `privilege` type is `DATABASE_PERMITTED`, which indicates that users are granted database-level authority and configuration is needed.
-- The user `root` can connect to Proxy only through `localhost` and can access `sharding_db` and `test_db`.
-- The user `my_user` can connect to Proxy through any host and can access `sharding_db`.
-
-## Related References
-
-Please refer to [Authority Provider](/en/dev-manual/proxy) for specific implementation of authority provider.
diff --git a/docs/document/content/user-manual/shardingsphere-proxy/yaml-config/authority.cn.md b/docs/document/content/user-manual/shardingsphere-proxy/yaml-config/authority.cn.md
new file mode 100644
index 00000000000..f78498fd869
--- /dev/null
+++ b/docs/document/content/user-manual/shardingsphere-proxy/yaml-config/authority.cn.md
@@ -0,0 +1,121 @@
++++
+title = "认证和授权"
+weight = 1
++++
+
+## 背景信息
+
+在 ShardingSphere-Proxy 中，通过 `authority` 来配置用户的认证和授权信息。
+
+得益于 ShardingSphere 的可插拔架构，Proxy 提供了两种级别的权限提供者，分别是：
+
+- `ALL_PERMITTED`：每个用户都拥有所有权限，无需专门授权；
+- `DATABASE_PERMITTED`：为用户授予指定逻辑库的权限，通过 `user-database-mappings` 进行定义。
+
+在配置 `authority` 时，管理员可根据需要选择使用哪一种权限提供者。
+
+## 参数解释
+
+```yaml
+authority:
+  users:
+    - user: # 用于登录计算节点的用户名和授权主机的组合，格式：<username>@<hostname>，hostname 为 % 或空字符串表示不限制授权主机
+      password: # 用户密码
+      authenticationMethodName: # 可选项，用于为用户指定密码认证方式
+  authenticators: # 可选项，默认不需要配置，Proxy 根据前端协议类型自动选择
+    authenticatorName:
+      type: # 密码认证类型
+  defaultAuthenticator: # 可选项，指定一个 authenticatorName 作为默认的密码认证方式
+  privilege:
+    type: # 权限提供者类型，缺省值为 ALL_PERMITTED
+```
+
+## 配置示例
+
+### 极简配置
+
+```yaml
+authority:
+  users:
+    - user: root@%
+      password: root
+    - user: sharding
+      password: sharding
+```
+
+说明：
+- 定义了两个用户：`root@%` 和 `sharding`；
+- 未定义 `authenticators` 和 `authenticationMethodName`，Proxy 将根据前端协议自动选择;
+- 未指定 `privilege type`，采用默认的 `ALL_PERMITTED`。
+
+### 认证配置
+
+自定义认证配置能够满足用户在一些特定场景下的需求。
+以 `openGauss` 作为前端协议类型为例，其默认的认证算法为 `scram-sha-256`。
+如果用户 `sharding` 需要用旧版本的 psql 客户端（不支持 `scram-sha-256`）连接 Proxy，则管理员可能允许 sharding 使用 md5 方式进行密码认证。
+配置方式如下：
+
+```yaml
+authority:
+  users:
+    - user: root@127.0.0.1
+      password: root
+    - user: sharding
+      password: sharding
+      authenticationMethodName: md5
+  authenticators:
+    md5:
+      type: MD5
+  privilege:
+    type: ALL_PERMITTED
+```
+
+说明：
+- 定义了两个用户：`root@127.0.0.1` 和 `sharding`；
+- 为用户 `sharding` 指定了 `MD5` 方式进行密码认证；
+- 没有为 `root@127.0.0.1` 指定认证方式，Proxy 将根据前端协议自动选择；
+- 指定权限提供者为 `ALL_PERMITTED`。
+
+### 授权配置
+
+#### ALL_PERMITTED
+
+```yaml
+authority:
+  users:
+    - user: root@127.0.0.1
+      password: root
+    - user: sharding
+      password: sharding
+  privilege:
+    type: ALL_PERMITTED
+```
+
+说明：
+- 定义了两个用户：`root@127.0.0.1` 和 `sharding`；
+- 未定义 `authenticators` 和 `authenticationMethodName`，Proxy 将根据前端协议自动选择;
+- 指定权限提供者为 `ALL_PERMITTED`。
+
+#### DATABASE_PERMITTED
+
+```yaml
+authority:
+  users:
+    - user: root@127.0.0.1
+      password: root
+    - user: sharding
+      password: sharding
+  privilege:
+    type: DATABASE_PERMITTED
+    props:
+      user-database-mappings: root@127.0.0.1=*, sharding=test_db, sharding=sharding_db
+```
+
+说明：
+- 定义了两个用户：`root@127.0.0.1` 和 `sharding`；
+- 未定义 `authenticators` 和 `authenticationMethodName`，Proxy 将根据前端协议自动选择；
+- 指定权限提供者为 `DATABASE_PERMITTED`，并授权 `root@127.0.0.1` 用户访问所有逻辑库(`*`)，sharding 用户仅能访问 test_db 和 sharding_db。
+
+## 相关参考
+
+权限提供者具体实现可以参考 [权限提供者](/cn/dev-manual/proxy)。
diff --git a/docs/document/content/user-manual/shardingsphere-proxy/yaml-config/authority.en.md b/docs/document/content/user-manual/shardingsphere-proxy/yaml-config/authority.en.md
new file mode 100644
index 00000000000..61714100ed8
--- /dev/null
+++ b/docs/document/content/user-manual/shardingsphere-proxy/yaml-config/authority.en.md
@@ -0,0 +1,122 @@
++++
+title = "Authentication & Authorization"
+weight = 1
++++
+
+## Background
+
+In ShardingSphere-Proxy, user authentication and authorization information is configured through `authority`.
+
+Thanks to ShardingSphere's pluggable architecture, Proxy provides two levels of privilege providers, namely: 
+
+- `ALL_PERMITTED`: each user has all privileges without special authorization;
+- `DATABASE_PERMITTED`: grant the user privileges on the specified logical databases, defined by `user-database-mappings`.
+
+The administrator can choose which privilege provider to use as needed when configuring `authority`. 
+
+## Parameter
+
+```yaml
+authority:
+  users:
+    - user: # Specify the username, and authorized host for logging in to the compute node. Format: <username>@<hostname>. When the hostname is % or an empty string, it indicates that the authorized host is not limited.
+      password: # Password
+      authenticationMethodName: # Optional, used to specify the password authentication method for the user
+  authenticators: # Optional, not required by default, Proxy will automatically choose the authentication method according to the frontend protocol type
+    authenticatorName:
+      type: # Authentication method type
+  defaultAuthenticator: # Optional, specify an authenticator as the default password authentication method
+  privilege:
+    type: # Privilege provider type. The default value is ALL_PERMITTED.
+```
+
+## Sample
+
+### Minimalist configuration
+
+```yaml
+authority:
+   users:
+     - user: root@%
+       password: root
+     - user: sharding
+       password: sharding
+```
+
+illustrate:
+- Two users are defined: `root@%` and `sharding`;
+- `authenticationMethodName` is not specified for `root@127.0.0.1`, Proxy will automatically choose the authentication method according to the frontend protocol;
+- privilege provider is not specified, the default `ALL_PERMITTED` will be used;
+
+
+### Authentication configuration
+
+Custom authentication configuration can meet the needs of users in some specific scenarios.
+Taking `openGauss` as the frontend protocol type as an example, its default authentication method is `scram-sha-256`.
+If the user `sharding` needs to use an old version of the psql client (which does not support `scram-sha-256`) to connect to the Proxy, the administrator may allow sharding to use the `md5` method for password authentication.
+The configuration is as follows:
+
+```yaml
+authority:
+   users:
+     - user: root@127.0.0.1
+       password: root
+     - user: sharding
+       password: sharding
+       authenticationMethodName: md5
+   authenticators:
+     md5:
+       type: MD5
+   privilege:
+     type: ALL_PERMITTED
+```
+
+illustrate:
+- Two users are defined: `root@127.0.0.1` and `sharding`;
+- Use `MD5` method for password authentication for `sharding`;
+- Authentication method is not specified for `root@127.0.0.1`, Proxy will automatically choose one according to the frontend protocol;
+- The privilege provider `ALL_PERMITTED` is specified.
+
+### Authorization configuration
+
+#### ALL_PERMITTED
+
+```yaml
+authority:
+  users:
+    - user: root@127.0.0.1
+      password: root
+    - user: sharding
+      password: sharding
+  privilege:
+    type: ALL_PERMITTED
+```
+
+illustrate:
+- Two users are defined: `root@127.0.0.1` and `sharding`;
+- `authenticators` and `authenticationMethodName` are not defined, Proxy will automatically choose the authentication method according to the frontend protocol;
+- The privilege provider `ALL_PERMITTED` is specified.
+
+#### DATABASE_PERMITTED
+
+```yaml
+authority:
+  users:
+    - user: root@127.0.0.1
+      password: root
+    - user: sharding
+      password: sharding
+  privilege:
+    type: DATABASE_PERMITTED
+    props:
+      user-database-mappings: root@127.0.0.1=*, sharding=test_db, sharding=sharding_db
+```
+
+illustrate:
+- Two users are defined: `root@127.0.0.1` and `sharding`;
+- `authenticators` and `authenticationMethodName` are not defined, Proxy will automatically choose the authentication method according to the frontend protocol;
+- The privilege provider `DATABASE_PERMITTED` is specified, authorize `root@127.0.0.1` to access all logical databases (`*`), and user `sharding` can only access `test_db` and `sharding_db`.
+
+## Related References
+
+Please refer to [Authority Provider](/en/dev-manual/proxy) for specific implementation of authority provider.
diff --git a/docs/document/content/user-manual/shardingsphere-proxy/yaml-config/props.cn.md b/docs/document/content/user-manual/shardingsphere-proxy/yaml-config/props.cn.md
index 3dea8e6fa0b..d493f68908c 100644
--- a/docs/document/content/user-manual/shardingsphere-proxy/yaml-config/props.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-proxy/yaml-config/props.cn.md
@@ -6,31 +6,32 @@ chapter = true
 
 ## 背景信息
 
-Apache ShardingSphere 提供属性配置的方式配置系统级配置。本节介绍 `server.yaml` 中的配置项。
+Apache ShardingSphere 提供了丰富的系统配置属性，用户可通过 `server.yaml` 进行配置。
 
 ## 参数解释
 
-| *名称*                                | *数据类型*   | *说明*                                                                                                                                   | *默认值*    | *动态生效* |             
-|-------------------------------------|----------|----------------------------------------------------------------------------------------------------------------------------------------|----------|--------| 
-| sql-show (?)                        | boolean  | 是否在日志中打印 SQL。 <br /> 打印 SQL 可以帮助开发者快速定位系统问题。日志内容包含：逻辑 SQL，真实 SQL 和 SQL 解析结果。<br /> 如果开启配置，日志将使用 Topic `ShardingSphere-SQL`，日志级别是 INFO。 | false    | 是      |
-| sql-simple (?)                      | boolean  | 是否在日志中打印简单风格的 SQL。                                                                                                                     | false    | 是      |
-| kernel-executor-size (?)            | int      | 用于设置任务处理线程池的大小。每个 ShardingSphereDataSource 使用一个独立的线程池，同一个 JVM 的不同数据源不共享线程池。                                                            | infinite | 否      |
-| max-connections-size-per-query (?)  | int      | 一次查询请求在每个数据库实例中所能使用的最大连接数。                                                                                                             | 1        | 是      |
-| check-table-metadata-enabled (?)    | boolean  | 在程序启动和更新时，是否检查分片元数据的结构一致性。                                                                                                             | false    | 是      |
-| proxy-frontend-flush-threshold (?)  | int      | 在 ShardingSphere-Proxy 中设置传输数据条数的 IO 刷新阈值。                                                                                             | 128      | 是      |
-| proxy-hint-enabled (?)              | boolean  | 是否允许在 ShardingSphere-Proxy 中使用 Hint。使用 Hint 会将 Proxy 的线程处理模型由 IO 多路复用变更为每个请求一个独立的线程，会降低 Proxy 的吞吐量。                                    | false    | 是      |
-| proxy-backend-query-fetch-size (?)  | int      | Proxy 后端与数据库交互的每次获取数据行数（使用游标的情况下）。数值增大可能会增加 ShardingSphere Proxy 的内存使用。默认值为 -1，代表设置为 JDBC 驱动的最小值。                                      | -1       | 是      |
-| proxy-frontend-executor-size (?)    | int      | Proxy 前端 Netty 线程池线程数量，默认值 0 代表使用 Netty 默认值。                                                                                           | 0        | 否      |
-| proxy-backend-executor-suitable (?) | String   | 可选选项：OLAP、OLTP。OLTP 选项可能会减少向客户端写入数据包的时间开销，但如果客户端连接数超过 `proxy-frontend-executor-size`，尤其是执行慢 SQL 时，它可能会增加 SQL 执行的延迟甚至阻塞其他客户端的连接。        | OLAP     | 是      |
-| proxy-frontend-max-connections (?)  | int      | 允许连接 Proxy 的最大客户端数量，默认值 0 代表不限制。                                                                                                       | 0        | 是      |
-| sql-federation-type (?)             | String   | 联邦查询执行器类型，包括：NONE，ORIGINAL，ADVANCED。                                                                                                   | NONE    | 是      |
-| proxy-mysql-default-version (?)     | String   | Proxy 通过配置文件指定 MySQL 的版本号,默认版本：5.7.22。                                                                                                 | 5.7.22   | 否      |
-| proxy-default-port (?)              | String   | Proxy 通过配置文件指定默认端口。                                                                                                                    | 3307     | 否      |
-| proxy-netty-backlog (?)             | int      | Proxy 通过配置文件指定默认netty back_log参数。                                                                                                      | 1024     | 否      |
-|proxy-frontend-database-protocol-type| String   | Proxy 前端协议类型，支持 MySQL, PostgreSQL, openGauss        |   ""    |    否    |
+| *名称*                                     | *数据类型*  | *说明*                                                                                                                                                                                 | *默认值* | *动态生效* |
+|-------------------------------------------|------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|----------|----------|
+| system-log-level (?)                      | String     | 系统日志输出级别，支持 DEBUG、INFO、WARN 和 ERROR，默认级别是 INFO。                                                                                                                         | false   | 是       |
+| sql-show (?)                              | boolean    | 是否在日志中打印 SQL。 <br /> 打印 SQL 可以帮助开发者快速定位系统问题。日志内容包含：逻辑 SQL，真实 SQL 和 SQL 解析结果。<br /> 如果开启配置，日志将使用 Topic `ShardingSphere-SQL`，日志级别是 INFO。  | false   | 是       |
+| sql-simple (?)                            | boolean    | 是否在日志中打印简单风格的 SQL。                                                                                                                                                            | false   | 是       |
+| kernel-executor-size (?)                  | int        | 用于设置任务处理线程池的大小。每个 ShardingSphereDataSource 使用一个独立的线程池，同一个 JVM 的不同数据源不共享线程池。                                                                            | infinite | 否       |
+| max-connections-size-per-query (?)        | int        | 一次查询请求在每个数据库实例中所能使用的最大连接数。                                                                                                                                           | 1       | 是       |
+| check-table-metadata-enabled (?)          | boolean    | 在程序启动和更新时，是否检查分片元数据的结构一致性。                                                                                                                                           | false   | 是       |
+| proxy-frontend-flush-threshold (?)        | int        | 在 ShardingSphere-Proxy 中设置传输数据条数的 IO 刷新阈值。                                                                                                                                   | 128     | 是       |
+| proxy-hint-enabled (?)                    | boolean    | 是否允许在 ShardingSphere-Proxy 中使用 Hint。使用 Hint 会将 Proxy 的线程处理模型由 IO 多路复用变更为每个请求一个独立的线程，会降低 Proxy 的吞吐量。                                                  | false   | 是       |
+| proxy-backend-query-fetch-size (?)        | int        | Proxy 后端与数据库交互的每次获取数据行数（使用游标的情况下）。数值增大可能会增加 ShardingSphere Proxy 的内存使用。默认值为 -1，代表设置为 JDBC 驱动的最小值。                                           | -1      | 是       |
+| proxy-frontend-executor-size (?)          | int        | Proxy 前端 Netty 线程池线程数量，默认值 0 代表使用 Netty 默认值。                                                                                                                             | 0       | 否       |
+| proxy-backend-executor-suitable (?)       | String     | 可选选项：OLAP、OLTP。OLTP 选项可能会减少向客户端写入数据包的时间开销，但如果客户端连接数超过 `proxy-frontend-executor-size`，尤其是执行慢 SQL 时，它可能会增加 SQL 执行的延迟甚至阻塞其他客户端的连接。   | OLAP    | 是       |
+| proxy-frontend-max-connections (?)        | int        | 允许连接 Proxy 的最大客户端数量，默认值 0 代表不限制。                                                                                                                                         | 0       | 是       |
+| sql-federation-type (?)                   | String     | 联邦查询执行器类型，包括：NONE，ORIGINAL，ADVANCED。                                                                                                                                         | NONE    | 是       |
+| proxy-mysql-default-version (?)           | String     | Proxy 通过配置文件指定 MySQL 的版本号，默认版本：5.7.22。                                                                                                                                     | 5.7.22  | 否       |
+| proxy-default-port (?)                    | String     | Proxy 通过配置文件指定默认端口。                                                                                                                                                             | 3307    | 否       |
+| proxy-netty-backlog (?)                   | int        | Proxy 通过配置文件指定默认netty back_log参数。                                                                                                                                               | 1024    | 否       |
+| proxy-frontend-database-protocol-type (?) | String     | Proxy 前端协议类型，支持 MySQL，PostgreSQL 和 openGauss                                                                                                                                      | ""      | 否       |
 
-属性配置可以通过 [DistSQL#RAL](/cn/user-manual/shardingsphere-proxy/distsql/syntax/ral/) 修改。
-支持动态修改的属性可以立即生效，不支持动态修改的属性需要重启后生效。
+属性配置可以通过 [DistSQL#RAL](/cn/user-manual/shardingsphere-proxy/distsql/syntax/ral/) 在线修改。
+其中支持动态修改的属性立即生效，不支持动态修改的属性在重启后生效。
 
 ## 配置示例
 
diff --git a/docs/document/content/user-manual/shardingsphere-proxy/yaml-config/props.en.md b/docs/document/content/user-manual/shardingsphere-proxy/yaml-config/props.en.md
index 31a749efcb0..515fd8df3be 100644
--- a/docs/document/content/user-manual/shardingsphere-proxy/yaml-config/props.en.md
+++ b/docs/document/content/user-manual/shardingsphere-proxy/yaml-config/props.en.md
@@ -6,31 +6,32 @@ chapter = true
 
 ## Background
 
-Apache ShardingSphere can configure system-level configuration through property configuration. This section describes the configuration items in `server.yaml`.
+Apache ShardingSphere provides a wealth of system configuration properties, which users can configure through `server.yaml`.
 
 ## Parameters
 
-| *Name*                              | *Data Type* | *Description*                                                                                                                                                                                                                                                                                              | *Default*    | *Dynamic Update* |             
-|-------------------------------------|-------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|----------|--------| 
-| sql-show (?)                        | boolean     | Whether to print SQL in logs. <br /> Printing SQL can help developers quickly locate system problems. Logs contain the following contents: logical SQL, authentic SQL and SQL parsing result. <br /> If configuration is enabled，logs will use Topic `ShardingSphere-SQL`，and log level is INFO。           | false    | True      |
-| sql-simple (?)                      | boolean     | Whether to print simple SQL in logs.                                                                                                                                                                                                                                                                       | false    | True      |
-| kernel-executor-size (?)            | int         | Set the size of the thread pool for task processing. Each ShardingSphereDataSource uses an independent thread pool，and different data sources on the same JVM do not share thread pools.                                                                                                                   | infinite | False      |
-| max-connections-size-per-query (?)  | int         | The maximum number of connections that a query request can use in each database instance.                                                                                                                                                                                                                  | 1        | True      |
-| check-table-metadata-enabled (?)    | boolean     | Whether shard metadata is checked for structural consistency when the program is started and updated.                                                                                                                                                                                                      | false    | True      |
-| proxy-frontend-flush-threshold (?)  | int         | Set the I/O refresh threshold for the number of transmitted data items in ShardingSphere-Proxy.                                                                                                                                                                                                            | 128      | True      |
-| proxy-hint-enabled (?)              | boolean     | Whether Hint is allowed in ShardingSphere-Proxy. Using Hint changes the Proxy's threading model from IO multiplexing to a separate thread per request, reducing Proxy's throughput.                                                                                                                        | false    | True      |
-| proxy-backend-query-fetch-size (?)  | int         | The number of rows of data obtained when the backend Proxy interacts with databases (using a cursor). A larger number may increase the occupied memory of ShardingSphere-Proxy. The default value of -1 indicates the minimum value for JDBC driver.                                                       | -1       | True      |
-| proxy-frontend-executor-size (?)    | int         | The number of threads in the Netty thread pool of front-end Proxy.                                                                                                                                                                                                                                         | 0        | False      |
-| proxy-backend-executor-suitable (?) | String      | Options: OLAP and OLTP. The OLTP option may reduce the time overhead when writing packets to the client，but if the number of client connections exceeds `proxy-frontend-executor-size`，especially with slow SQL, it can cause a longer delay to SQL execution and even block connections to other clients. | OLAP     | True      |
-| proxy-frontend-max-connections (?)  | int         | The maximum number of clients that can be connected to Proxy. The default value of 0 indicates that there's no limit.                                                                                                                                                                                      | 0        | True      |
-| sql-federation-type (?)             | String      | SQL federation executor type, including: NONE, ORIGINAL, ADVANCED.                                                                                                                                                                                                                                         | NONE    | True      |
-| proxy-mysql-default-version (?)     | String      | Proxy specifies the MySQL version through configuration files, and the default verison is 5.7.22.                                                                                                                                                                                                          | 5.7.22   | False      |
-| proxy-default-port (?)              | String      | Proxy specifies the default window through configuration files.                                                                                                                                                                                                                                            | 3307     | False      |
-| proxy-netty-backlog (?)             | int         | Proxy specifies the default netty back_log parameter through configuration files.                                                                                                                                                                                                                          | 1024     | False      |
-|proxy-frontend-database-protocol-type| String      | Proxy front-end protocol type, supports MySQL, PostgreSQL, openGauss        |   ""    |    False     |
+| *Name*                                   | *Data Type* | *Description*                                                                                                                                                                                                                                                                                                | *Default* | *Dynamic Update* |
+|------------------------------------------|-------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|-----------|------------------|
+| system-log-level (?)                     | String      | System log output level, supports DEBUG, INFO, WARN and ERROR, the default level is INFO.                                                                                                                                                                                                                    | false     | True             |
+| sql-show (?)                             | boolean     | Whether to print SQL in logs. <br /> Printing SQL can help developers quickly locate system problems. Logs contain the following contents: logical SQL, authentic SQL and SQL parsing result. <br /> If configuration is enabled, logs will use Topic `ShardingSphere-SQL`, and log level is INFO.           | false     | True             |
+| sql-simple (?)                           | boolean     | Whether to print simple SQL in logs.                                                                                                                                                                                                                                                                         | false     | True             |
+| kernel-executor-size (?)                 | int         | Set the size of the thread pool for task processing. Each ShardingSphereDataSource uses an independent thread pool, and different data sources on the same JVM do not share thread pools.                                                                                                                    | infinite  | False            |
+| max-connections-size-per-query (?)       | int         | The maximum number of connections that a query request can use in each database instance.                                                                                                                                                                                                                    | 1         | True             |
+| check-table-metadata-enabled (?)         | boolean     | Whether shard metadata is checked for structural consistency when the program is started and updated.                                                                                                                                                                                                        | false     | True             |
+| proxy-frontend-flush-threshold (?)       | int         | Set the I/O refresh threshold for the number of transmitted data items in ShardingSphere-Proxy.                                                                                                                                                                                                              | 128       | True             |
+| proxy-hint-enabled (?)                   | boolean     | Whether Hint is allowed in ShardingSphere-Proxy. Using Hint changes the Proxy's threading model from IO multiplexing to a separate thread per request, reducing Proxy's throughput.                                                                                                                          | false     | True             |
+| proxy-backend-query-fetch-size (?)       | int         | The number of rows of data obtained when the backend Proxy interacts with databases (using a cursor). A larger number may increase the occupied memory of ShardingSphere-Proxy. The default value of -1 indicates the minimum value for JDBC driver.                                                         | -1        | True             |
+| proxy-frontend-executor-size (?)         | int         | The number of threads in the Netty thread pool of front-end Proxy.                                                                                                                                                                                                                                           | 0         | False            |
+| proxy-backend-executor-suitable (?)      | String      | Options: OLAP and OLTP. The OLTP option may reduce the time overhead when writing packets to the client, but if the number of client connections exceeds `proxy-frontend-executor-size`, especially with slow SQL, it can cause a longer delay to SQL execution and even block connections to other clients. | OLAP      | True             |
+| proxy-frontend-max-connections (?)       | int         | The maximum number of clients that can be connected to Proxy. The default value of 0 indicates that there's no limit.                                                                                                                                                                                        | 0         | True             |
+| sql-federation-type (?)                  | String      | SQL federation executor type, including: NONE, ORIGINAL, ADVANCED.                                                                                                                                                                                                                                           | NONE      | True             |
+| proxy-mysql-default-version (?)          | String      | Proxy specifies the MySQL version through configuration files, and the default verison is 5.7.22.                                                                                                                                                                                                            | 5.7.22    | False            |
+| proxy-default-port (?)                   | String      | Proxy specifies the default window through configuration files.                                                                                                                                                                                                                                              | 3307      | False            |
+| proxy-netty-backlog (?)                  | int         | Proxy specifies the default netty back_log parameter through configuration files.                                                                                                                                                                                                                            | 1024      | False            |
+| proxy-frontend-database-protocol-type (?)| String      | Proxy front-end protocol type, supports MySQL, PostgreSQL, openGauss                                                                                                                                                                                                                                         | ""        | False            |
 
-Property configuration can be modified according to [DistSQL#RAL](/en/user-manual/shardingsphere-proxy/distsql/syntax/ral/).
-Properties that support dynamic change can take effect immediately. Properties that do not support dynamic change take effect after a restart.
+Properties can be modified online through [DistSQL#RAL](/en/user-manual/shardingsphere-proxy/distsql/syntax/ral/).
+Properties that support dynamic change can take effect immediately. The other ones that do not support dynamic change take effect after a restart.
 
 ## Sample
 
